// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.7
// source: vms.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InterfaceType int32

const (
	InterfaceType_INVALID_INTERFACE_TYPE InterfaceType = 0
	InterfaceType_INTERFACE_TYPE_NETWORK InterfaceType = 1
	InterfaceType_INTERFACE_TYPE_DIRECT  InterfaceType = 2
)

// Enum value maps for InterfaceType.
var (
	InterfaceType_name = map[int32]string{
		0: "INVALID_INTERFACE_TYPE",
		1: "INTERFACE_TYPE_NETWORK",
		2: "INTERFACE_TYPE_DIRECT",
	}
	InterfaceType_value = map[string]int32{
		"INVALID_INTERFACE_TYPE": 0,
		"INTERFACE_TYPE_NETWORK": 1,
		"INTERFACE_TYPE_DIRECT":  2,
	}
)

func (x InterfaceType) Enum() *InterfaceType {
	p := new(InterfaceType)
	*p = x
	return p
}

func (x InterfaceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InterfaceType) Descriptor() protoreflect.EnumDescriptor {
	return file_vms_proto_enumTypes[0].Descriptor()
}

func (InterfaceType) Type() protoreflect.EnumType {
	return &file_vms_proto_enumTypes[0]
}

func (x InterfaceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InterfaceType.Descriptor instead.
func (InterfaceType) EnumDescriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{0}
}

type InterfaceSourceDirectModel int32

const (
	InterfaceSourceDirectModel_INVALID_INTERFACE_SOURCE_DIRECT_MODEL     InterfaceSourceDirectModel = 0
	InterfaceSourceDirectModel_INTERFACE_SOURCE_DIRECT_MODEL_BRIDGE      InterfaceSourceDirectModel = 1
	InterfaceSourceDirectModel_INTERFACE_SOURCE_DIRECT_MODEL_PASSTHROUGH InterfaceSourceDirectModel = 2
)

// Enum value maps for InterfaceSourceDirectModel.
var (
	InterfaceSourceDirectModel_name = map[int32]string{
		0: "INVALID_INTERFACE_SOURCE_DIRECT_MODEL",
		1: "INTERFACE_SOURCE_DIRECT_MODEL_BRIDGE",
		2: "INTERFACE_SOURCE_DIRECT_MODEL_PASSTHROUGH",
	}
	InterfaceSourceDirectModel_value = map[string]int32{
		"INVALID_INTERFACE_SOURCE_DIRECT_MODEL":     0,
		"INTERFACE_SOURCE_DIRECT_MODEL_BRIDGE":      1,
		"INTERFACE_SOURCE_DIRECT_MODEL_PASSTHROUGH": 2,
	}
)

func (x InterfaceSourceDirectModel) Enum() *InterfaceSourceDirectModel {
	p := new(InterfaceSourceDirectModel)
	*p = x
	return p
}

func (x InterfaceSourceDirectModel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InterfaceSourceDirectModel) Descriptor() protoreflect.EnumDescriptor {
	return file_vms_proto_enumTypes[1].Descriptor()
}

func (InterfaceSourceDirectModel) Type() protoreflect.EnumType {
	return &file_vms_proto_enumTypes[1]
}

func (x InterfaceSourceDirectModel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InterfaceSourceDirectModel.Descriptor instead.
func (InterfaceSourceDirectModel) EnumDescriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{1}
}

type VMDiskType int32

const (
	VMDiskType_INVALID_DISK_TYPE VMDiskType = 0
	VMDiskType_FILE              VMDiskType = 1
	VMDiskType_BLOCK             VMDiskType = 2
	VMDiskType_NVME              VMDiskType = 3
)

// Enum value maps for VMDiskType.
var (
	VMDiskType_name = map[int32]string{
		0: "INVALID_DISK_TYPE",
		1: "FILE",
		2: "BLOCK",
		3: "NVME",
	}
	VMDiskType_value = map[string]int32{
		"INVALID_DISK_TYPE": 0,
		"FILE":              1,
		"BLOCK":             2,
		"NVME":              3,
	}
)

func (x VMDiskType) Enum() *VMDiskType {
	p := new(VMDiskType)
	*p = x
	return p
}

func (x VMDiskType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VMDiskType) Descriptor() protoreflect.EnumDescriptor {
	return file_vms_proto_enumTypes[2].Descriptor()
}

func (VMDiskType) Type() protoreflect.EnumType {
	return &file_vms_proto_enumTypes[2]
}

func (x VMDiskType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VMDiskType.Descriptor instead.
func (VMDiskType) EnumDescriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{2}
}

// common response
type VMOperationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VMOperationResponse) Reset() {
	*x = VMOperationResponse{}
	mi := &file_vms_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VMOperationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VMOperationResponse) ProtoMessage() {}

func (x *VMOperationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VMOperationResponse.ProtoReflect.Descriptor instead.
func (*VMOperationResponse) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{0}
}

func (x *VMOperationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *VMOperationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Libvirt 创建请求
type CreateVMWithLibvirtRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	VmName        string                 `protobuf:"bytes,2,opt,name=vm_name,json=vmName,proto3" json:"vm_name,omitempty"`
	Cpu           int32                  `protobuf:"varint,3,opt,name=cpu,proto3" json:"cpu,omitempty"`       // 明确使用 int32 而非 int
	Memory        int32                  `protobuf:"varint,4,opt,name=memory,proto3" json:"memory,omitempty"` // 内存单位建议注明（如 MB）
	DiskPath      string                 `protobuf:"bytes,5,opt,name=disk_path,json=diskPath,proto3" json:"disk_path,omitempty"`
	IsoPath       string                 `protobuf:"bytes,6,opt,name=iso_path,json=isoPath,proto3" json:"iso_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateVMWithLibvirtRequest) Reset() {
	*x = CreateVMWithLibvirtRequest{}
	mi := &file_vms_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVMWithLibvirtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVMWithLibvirtRequest) ProtoMessage() {}

func (x *CreateVMWithLibvirtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVMWithLibvirtRequest.ProtoReflect.Descriptor instead.
func (*CreateVMWithLibvirtRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{1}
}

func (x *CreateVMWithLibvirtRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateVMWithLibvirtRequest) GetVmName() string {
	if x != nil {
		return x.VmName
	}
	return ""
}

func (x *CreateVMWithLibvirtRequest) GetCpu() int32 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *CreateVMWithLibvirtRequest) GetMemory() int32 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *CreateVMWithLibvirtRequest) GetDiskPath() string {
	if x != nil {
		return x.DiskPath
	}
	return ""
}

func (x *CreateVMWithLibvirtRequest) GetIsoPath() string {
	if x != nil {
		return x.IsoPath
	}
	return ""
}

// Multipass 创建请求
type CreateVMWithMultipassRequest struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Id     string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	VmName string                 `protobuf:"bytes,2,opt,name=vm_name,json=vmName,proto3" json:"vm_name,omitempty"`
	Cpu    int32                  `protobuf:"varint,3,opt,name=cpu,proto3" json:"cpu,omitempty"`
	// with K, M, G suffix.
	Memory string `protobuf:"bytes,4,opt,name=memory,proto3" json:"memory,omitempty"`
	// with K, M, G suffix.
	DiskSize string `protobuf:"bytes,5,opt,name=disk_size,json=diskSize,proto3" json:"disk_size,omitempty"`
	// image name or path
	Image         string `protobuf:"bytes,6,opt,name=image,proto3" json:"image,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateVMWithMultipassRequest) Reset() {
	*x = CreateVMWithMultipassRequest{}
	mi := &file_vms_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVMWithMultipassRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVMWithMultipassRequest) ProtoMessage() {}

func (x *CreateVMWithMultipassRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVMWithMultipassRequest.ProtoReflect.Descriptor instead.
func (*CreateVMWithMultipassRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{2}
}

func (x *CreateVMWithMultipassRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateVMWithMultipassRequest) GetVmName() string {
	if x != nil {
		return x.VmName
	}
	return ""
}

func (x *CreateVMWithMultipassRequest) GetCpu() int32 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *CreateVMWithMultipassRequest) GetMemory() string {
	if x != nil {
		return x.Memory
	}
	return ""
}

func (x *CreateVMWithMultipassRequest) GetDiskSize() string {
	if x != nil {
		return x.DiskSize
	}
	return ""
}

func (x *CreateVMWithMultipassRequest) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

type CreateVMRequest struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Id     string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	VmName string                 `protobuf:"bytes,2,opt,name=vm_name,json=vmName,proto3" json:"vm_name,omitempty"`
	Cpu    int32                  `protobuf:"varint,3,opt,name=cpu,proto3" json:"cpu,omitempty"`
	// unit MB
	Memory int32 `protobuf:"varint,4,opt,name=memory,proto3" json:"memory,omitempty"`
	// unit GB
	DiskSize int32 `protobuf:"varint,5,opt,name=disk_size,json=diskSize,proto3" json:"disk_size,omitempty"`
	// image name or path
	Image         string `protobuf:"bytes,6,opt,name=image,proto3" json:"image,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateVMRequest) Reset() {
	*x = CreateVMRequest{}
	mi := &file_vms_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVMRequest) ProtoMessage() {}

func (x *CreateVMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVMRequest.ProtoReflect.Descriptor instead.
func (*CreateVMRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{3}
}

func (x *CreateVMRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateVMRequest) GetVmName() string {
	if x != nil {
		return x.VmName
	}
	return ""
}

func (x *CreateVMRequest) GetCpu() int32 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *CreateVMRequest) GetMemory() int32 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *CreateVMRequest) GetDiskSize() int32 {
	if x != nil {
		return x.DiskSize
	}
	return 0
}

func (x *CreateVMRequest) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

// 其他操作请求
type StartVMRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	VmName        string                 `protobuf:"bytes,2,opt,name=vm_name,json=vmName,proto3" json:"vm_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartVMRequest) Reset() {
	*x = StartVMRequest{}
	mi := &file_vms_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartVMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartVMRequest) ProtoMessage() {}

func (x *StartVMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartVMRequest.ProtoReflect.Descriptor instead.
func (*StartVMRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{4}
}

func (x *StartVMRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StartVMRequest) GetVmName() string {
	if x != nil {
		return x.VmName
	}
	return ""
}

type StopVMRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	VmName        string                 `protobuf:"bytes,2,opt,name=vm_name,json=vmName,proto3" json:"vm_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopVMRequest) Reset() {
	*x = StopVMRequest{}
	mi := &file_vms_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopVMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopVMRequest) ProtoMessage() {}

func (x *StopVMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopVMRequest.ProtoReflect.Descriptor instead.
func (*StopVMRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{5}
}

func (x *StopVMRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StopVMRequest) GetVmName() string {
	if x != nil {
		return x.VmName
	}
	return ""
}

type DeleteVMRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	VmName        string                 `protobuf:"bytes,2,opt,name=vm_name,json=vmName,proto3" json:"vm_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteVMRequest) Reset() {
	*x = DeleteVMRequest{}
	mi := &file_vms_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteVMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVMRequest) ProtoMessage() {}

func (x *DeleteVMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVMRequest.ProtoReflect.Descriptor instead.
func (*DeleteVMRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteVMRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteVMRequest) GetVmName() string {
	if x != nil {
		return x.VmName
	}
	return ""
}

type UpdateVMRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	VmName        string                 `protobuf:"bytes,2,opt,name=vm_name,json=vmName,proto3" json:"vm_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateVMRequest) Reset() {
	*x = UpdateVMRequest{}
	mi := &file_vms_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateVMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVMRequest) ProtoMessage() {}

func (x *UpdateVMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVMRequest.ProtoReflect.Descriptor instead.
func (*UpdateVMRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateVMRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateVMRequest) GetVmName() string {
	if x != nil {
		return x.VmName
	}
	return ""
}

type ListVMInstanceReqeust struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVMInstanceReqeust) Reset() {
	*x = ListVMInstanceReqeust{}
	mi := &file_vms_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVMInstanceReqeust) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVMInstanceReqeust) ProtoMessage() {}

func (x *ListVMInstanceReqeust) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVMInstanceReqeust.ProtoReflect.Descriptor instead.
func (*ListVMInstanceReqeust) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{8}
}

func (x *ListVMInstanceReqeust) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type VMInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	State         string                 `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	Ip            string                 `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	Image         string                 `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VMInfo) Reset() {
	*x = VMInfo{}
	mi := &file_vms_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VMInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VMInfo) ProtoMessage() {}

func (x *VMInfo) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VMInfo.ProtoReflect.Descriptor instead.
func (*VMInfo) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{9}
}

func (x *VMInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VMInfo) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *VMInfo) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *VMInfo) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

type ListVMInstanceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VmInfos       []*VMInfo              `protobuf:"bytes,1,rep,name=vm_infos,json=vmInfos,proto3" json:"vm_infos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVMInstanceResponse) Reset() {
	*x = ListVMInstanceResponse{}
	mi := &file_vms_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVMInstanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVMInstanceResponse) ProtoMessage() {}

func (x *ListVMInstanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVMInstanceResponse.ProtoReflect.Descriptor instead.
func (*ListVMInstanceResponse) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{10}
}

func (x *ListVMInstanceResponse) GetVmInfos() []*VMInfo {
	if x != nil {
		return x.VmInfos
	}
	return nil
}

type ListImageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListImageRequest) Reset() {
	*x = ListImageRequest{}
	mi := &file_vms_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListImageRequest) ProtoMessage() {}

func (x *ListImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListImageRequest.ProtoReflect.Descriptor instead.
func (*ListImageRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{11}
}

func (x *ListImageRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListImageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Images        []string               `protobuf:"bytes,1,rep,name=images,proto3" json:"images,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListImageResponse) Reset() {
	*x = ListImageResponse{}
	mi := &file_vms_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListImageResponse) ProtoMessage() {}

func (x *ListImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListImageResponse.ProtoReflect.Descriptor instead.
func (*ListImageResponse) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{12}
}

func (x *ListImageResponse) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

type DeleteImageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteImageRequest) Reset() {
	*x = DeleteImageRequest{}
	mi := &file_vms_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteImageRequest) ProtoMessage() {}

func (x *DeleteImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteImageRequest.ProtoReflect.Descriptor instead.
func (*DeleteImageRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteImageRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteImageRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type DeleteImageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteImageResponse) Reset() {
	*x = DeleteImageResponse{}
	mi := &file_vms_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteImageResponse) ProtoMessage() {}

func (x *DeleteImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteImageResponse.ProtoReflect.Descriptor instead.
func (*DeleteImageResponse) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteImageResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteImageResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type MultipassExecRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	InstanceName  string                 `protobuf:"bytes,2,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty"`
	Command       string                 `protobuf:"bytes,3,opt,name=command,proto3" json:"command,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MultipassExecRequest) Reset() {
	*x = MultipassExecRequest{}
	mi := &file_vms_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MultipassExecRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultipassExecRequest) ProtoMessage() {}

func (x *MultipassExecRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultipassExecRequest.ProtoReflect.Descriptor instead.
func (*MultipassExecRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{15}
}

func (x *MultipassExecRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MultipassExecRequest) GetInstanceName() string {
	if x != nil {
		return x.InstanceName
	}
	return ""
}

func (x *MultipassExecRequest) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

type MultipassExecResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Output        string                 `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MultipassExecResponse) Reset() {
	*x = MultipassExecResponse{}
	mi := &file_vms_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MultipassExecResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultipassExecResponse) ProtoMessage() {}

func (x *MultipassExecResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultipassExecResponse.ProtoReflect.Descriptor instead.
func (*MultipassExecResponse) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{16}
}

func (x *MultipassExecResponse) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

type CreateVolWithLibvirtReqeust struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Id    string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name  string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Pool  string                 `protobuf:"bytes,3,opt,name=pool,proto3" json:"pool,omitempty"`
	// unit GB
	Capacity      int32  `protobuf:"varint,4,opt,name=capacity,proto3" json:"capacity,omitempty"`
	Format        string `protobuf:"bytes,5,opt,name=format,proto3" json:"format,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateVolWithLibvirtReqeust) Reset() {
	*x = CreateVolWithLibvirtReqeust{}
	mi := &file_vms_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVolWithLibvirtReqeust) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVolWithLibvirtReqeust) ProtoMessage() {}

func (x *CreateVolWithLibvirtReqeust) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVolWithLibvirtReqeust.ProtoReflect.Descriptor instead.
func (*CreateVolWithLibvirtReqeust) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{17}
}

func (x *CreateVolWithLibvirtReqeust) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateVolWithLibvirtReqeust) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateVolWithLibvirtReqeust) GetPool() string {
	if x != nil {
		return x.Pool
	}
	return ""
}

func (x *CreateVolWithLibvirtReqeust) GetCapacity() int32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

func (x *CreateVolWithLibvirtReqeust) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

type CreateVolWithLibvirtResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pool          string                 `protobuf:"bytes,1,opt,name=pool,proto3" json:"pool,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Key           string                 `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateVolWithLibvirtResponse) Reset() {
	*x = CreateVolWithLibvirtResponse{}
	mi := &file_vms_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVolWithLibvirtResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVolWithLibvirtResponse) ProtoMessage() {}

func (x *CreateVolWithLibvirtResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVolWithLibvirtResponse.ProtoReflect.Descriptor instead.
func (*CreateVolWithLibvirtResponse) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{18}
}

func (x *CreateVolWithLibvirtResponse) GetPool() string {
	if x != nil {
		return x.Pool
	}
	return ""
}

func (x *CreateVolWithLibvirtResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateVolWithLibvirtResponse) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type GetVolRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PoolName      string                 `protobuf:"bytes,2,opt,name=pool_name,json=poolName,proto3" json:"pool_name,omitempty"`
	VolName       string                 `protobuf:"bytes,3,opt,name=vol_name,json=volName,proto3" json:"vol_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVolRequest) Reset() {
	*x = GetVolRequest{}
	mi := &file_vms_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVolRequest) ProtoMessage() {}

func (x *GetVolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVolRequest.ProtoReflect.Descriptor instead.
func (*GetVolRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{19}
}

func (x *GetVolRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetVolRequest) GetPoolName() string {
	if x != nil {
		return x.PoolName
	}
	return ""
}

func (x *GetVolRequest) GetVolName() string {
	if x != nil {
		return x.VolName
	}
	return ""
}

type GetVolResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Name  string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Pool  string                 `protobuf:"bytes,3,opt,name=pool,proto3" json:"pool,omitempty"`
	// unit GB
	Capacity      int32  `protobuf:"varint,4,opt,name=capacity,proto3" json:"capacity,omitempty"`
	Path          string `protobuf:"bytes,5,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVolResponse) Reset() {
	*x = GetVolResponse{}
	mi := &file_vms_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVolResponse) ProtoMessage() {}

func (x *GetVolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVolResponse.ProtoReflect.Descriptor instead.
func (*GetVolResponse) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{20}
}

func (x *GetVolResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetVolResponse) GetPool() string {
	if x != nil {
		return x.Pool
	}
	return ""
}

func (x *GetVolResponse) GetCapacity() int32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

func (x *GetVolResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type ListNodeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Start         int32                  `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End           int32                  `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNodeRequest) Reset() {
	*x = ListNodeRequest{}
	mi := &file_vms_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodeRequest) ProtoMessage() {}

func (x *ListNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodeRequest.ProtoReflect.Descriptor instead.
func (*ListNodeRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{21}
}

func (x *ListNodeRequest) GetStart() int32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *ListNodeRequest) GetEnd() int32 {
	if x != nil {
		return x.End
	}
	return 0
}

type Node struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Id    string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Os    string                 `protobuf:"bytes,2,opt,name=os,proto3" json:"os,omitempty"`
	// multipass or libvirt
	VmType         string `protobuf:"bytes,3,opt,name=vm_type,json=vmType,proto3" json:"vm_type,omitempty"`
	TotalCpu       int32  `protobuf:"varint,4,opt,name=total_cpu,json=totalCpu,proto3" json:"total_cpu,omitempty"`
	TotalMemory    int32  `protobuf:"varint,5,opt,name=total_memory,json=totalMemory,proto3" json:"total_memory,omitempty"`
	SystemDiskSize int32  `protobuf:"varint,6,opt,name=system_disk_size,json=systemDiskSize,proto3" json:"system_disk_size,omitempty"`
	Ip             string `protobuf:"bytes,7,opt,name=ip,proto3" json:"ip,omitempty"`
	Online         bool   `protobuf:"varint,8,opt,name=online,proto3" json:"online,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Node) Reset() {
	*x = Node{}
	mi := &file_vms_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{22}
}

func (x *Node) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Node) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *Node) GetVmType() string {
	if x != nil {
		return x.VmType
	}
	return ""
}

func (x *Node) GetTotalCpu() int32 {
	if x != nil {
		return x.TotalCpu
	}
	return 0
}

func (x *Node) GetTotalMemory() int32 {
	if x != nil {
		return x.TotalMemory
	}
	return 0
}

func (x *Node) GetSystemDiskSize() int32 {
	if x != nil {
		return x.SystemDiskSize
	}
	return 0
}

func (x *Node) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *Node) GetOnline() bool {
	if x != nil {
		return x.Online
	}
	return false
}

type ListNodeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nodes         []*Node                `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNodeResponse) Reset() {
	*x = ListNodeResponse{}
	mi := &file_vms_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodeResponse) ProtoMessage() {}

func (x *ListNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodeResponse.ProtoReflect.Descriptor instead.
func (*ListNodeResponse) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{23}
}

func (x *ListNodeResponse) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *ListNodeResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetNodeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodeRequest) Reset() {
	*x = GetNodeRequest{}
	mi := &file_vms_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeRequest) ProtoMessage() {}

func (x *GetNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeRequest.ProtoReflect.Descriptor instead.
func (*GetNodeRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{24}
}

func (x *GetNodeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetNodeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Node          *Node                  `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodeResponse) Reset() {
	*x = GetNodeResponse{}
	mi := &file_vms_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeResponse) ProtoMessage() {}

func (x *GetNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeResponse.ProtoReflect.Descriptor instead.
func (*GetNodeResponse) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{25}
}

func (x *GetNodeResponse) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

type HostNetworkInterface struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Mac           string                 `protobuf:"bytes,2,opt,name=mac,proto3" json:"mac,omitempty"`
	Active        bool                   `protobuf:"varint,3,opt,name=active,proto3" json:"active,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HostNetworkInterface) Reset() {
	*x = HostNetworkInterface{}
	mi := &file_vms_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostNetworkInterface) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostNetworkInterface) ProtoMessage() {}

func (x *HostNetworkInterface) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostNetworkInterface.ProtoReflect.Descriptor instead.
func (*HostNetworkInterface) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{26}
}

func (x *HostNetworkInterface) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HostNetworkInterface) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *HostNetworkInterface) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

type ListHostNetworkInterfaceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListHostNetworkInterfaceRequest) Reset() {
	*x = ListHostNetworkInterfaceRequest{}
	mi := &file_vms_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListHostNetworkInterfaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHostNetworkInterfaceRequest) ProtoMessage() {}

func (x *ListHostNetworkInterfaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHostNetworkInterfaceRequest.ProtoReflect.Descriptor instead.
func (*ListHostNetworkInterfaceRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{27}
}

func (x *ListHostNetworkInterfaceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListHostNetworkInterfaceResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Interfaces    []*HostNetworkInterface `protobuf:"bytes,1,rep,name=interfaces,proto3" json:"interfaces,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListHostNetworkInterfaceResponse) Reset() {
	*x = ListHostNetworkInterfaceResponse{}
	mi := &file_vms_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListHostNetworkInterfaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHostNetworkInterfaceResponse) ProtoMessage() {}

func (x *ListHostNetworkInterfaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHostNetworkInterfaceResponse.ProtoReflect.Descriptor instead.
func (*ListHostNetworkInterfaceResponse) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{28}
}

func (x *ListHostNetworkInterfaceResponse) GetInterfaces() []*HostNetworkInterface {
	if x != nil {
		return x.Interfaces
	}
	return nil
}

type AddNetworkInterfaceRequest struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Id     string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	VmName string                 `protobuf:"bytes,2,opt,name=vm_name,json=vmName,proto3" json:"vm_name,omitempty"`
	Type   InterfaceType          `protobuf:"varint,3,opt,name=type,proto3,enum=pb.InterfaceType" json:"type,omitempty"`
	// Required only when type == INTERFACE_TYPE_DIRECT
	SourceDirectDev string `protobuf:"bytes,4,opt,name=source_direct_dev,json=sourceDirectDev,proto3" json:"source_direct_dev,omitempty"`
	// Required only when type == INTERFACE_TYPE_DIRECT
	Model         InterfaceSourceDirectModel `protobuf:"varint,5,opt,name=model,proto3,enum=pb.InterfaceSourceDirectModel" json:"model,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddNetworkInterfaceRequest) Reset() {
	*x = AddNetworkInterfaceRequest{}
	mi := &file_vms_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddNetworkInterfaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNetworkInterfaceRequest) ProtoMessage() {}

func (x *AddNetworkInterfaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNetworkInterfaceRequest.ProtoReflect.Descriptor instead.
func (*AddNetworkInterfaceRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{29}
}

func (x *AddNetworkInterfaceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddNetworkInterfaceRequest) GetVmName() string {
	if x != nil {
		return x.VmName
	}
	return ""
}

func (x *AddNetworkInterfaceRequest) GetType() InterfaceType {
	if x != nil {
		return x.Type
	}
	return InterfaceType_INVALID_INTERFACE_TYPE
}

func (x *AddNetworkInterfaceRequest) GetSourceDirectDev() string {
	if x != nil {
		return x.SourceDirectDev
	}
	return ""
}

func (x *AddNetworkInterfaceRequest) GetModel() InterfaceSourceDirectModel {
	if x != nil {
		return x.Model
	}
	return InterfaceSourceDirectModel_INVALID_INTERFACE_SOURCE_DIRECT_MODEL
}

type DeleteNetworkInterfaceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	VmName        string                 `protobuf:"bytes,2,opt,name=vm_name,json=vmName,proto3" json:"vm_name,omitempty"`
	Mac           string                 `protobuf:"bytes,3,opt,name=mac,proto3" json:"mac,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNetworkInterfaceRequest) Reset() {
	*x = DeleteNetworkInterfaceRequest{}
	mi := &file_vms_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNetworkInterfaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNetworkInterfaceRequest) ProtoMessage() {}

func (x *DeleteNetworkInterfaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNetworkInterfaceRequest.ProtoReflect.Descriptor instead.
func (*DeleteNetworkInterfaceRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{30}
}

func (x *DeleteNetworkInterfaceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteNetworkInterfaceRequest) GetVmName() string {
	if x != nil {
		return x.VmName
	}
	return ""
}

func (x *DeleteNetworkInterfaceRequest) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

type ListVMNetwrokInterfaceReqeust struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	VmName        string                 `protobuf:"bytes,2,opt,name=vm_name,json=vmName,proto3" json:"vm_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVMNetwrokInterfaceReqeust) Reset() {
	*x = ListVMNetwrokInterfaceReqeust{}
	mi := &file_vms_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVMNetwrokInterfaceReqeust) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVMNetwrokInterfaceReqeust) ProtoMessage() {}

func (x *ListVMNetwrokInterfaceReqeust) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVMNetwrokInterfaceReqeust.ProtoReflect.Descriptor instead.
func (*ListVMNetwrokInterfaceReqeust) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{31}
}

func (x *ListVMNetwrokInterfaceReqeust) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ListVMNetwrokInterfaceReqeust) GetVmName() string {
	if x != nil {
		return x.VmName
	}
	return ""
}

type VMNetworkInterface struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Source        string                 `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	SourceModel   string                 `protobuf:"bytes,4,opt,name=source_model,json=sourceModel,proto3" json:"source_model,omitempty"`
	Model         string                 `protobuf:"bytes,5,opt,name=model,proto3" json:"model,omitempty"`
	Mac           string                 `protobuf:"bytes,6,opt,name=mac,proto3" json:"mac,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VMNetworkInterface) Reset() {
	*x = VMNetworkInterface{}
	mi := &file_vms_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VMNetworkInterface) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VMNetworkInterface) ProtoMessage() {}

func (x *VMNetworkInterface) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VMNetworkInterface.ProtoReflect.Descriptor instead.
func (*VMNetworkInterface) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{32}
}

func (x *VMNetworkInterface) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VMNetworkInterface) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *VMNetworkInterface) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *VMNetworkInterface) GetSourceModel() string {
	if x != nil {
		return x.SourceModel
	}
	return ""
}

func (x *VMNetworkInterface) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *VMNetworkInterface) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

type ListVMNetworkInterfaceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Interfaces    []*VMNetworkInterface  `protobuf:"bytes,1,rep,name=interfaces,proto3" json:"interfaces,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVMNetworkInterfaceResponse) Reset() {
	*x = ListVMNetworkInterfaceResponse{}
	mi := &file_vms_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVMNetworkInterfaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVMNetworkInterfaceResponse) ProtoMessage() {}

func (x *ListVMNetworkInterfaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVMNetworkInterfaceResponse.ProtoReflect.Descriptor instead.
func (*ListVMNetworkInterfaceResponse) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{33}
}

func (x *ListVMNetworkInterfaceResponse) GetInterfaces() []*VMNetworkInterface {
	if x != nil {
		return x.Interfaces
	}
	return nil
}

type AddDiskRequest struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Id       string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	VmName   string                 `protobuf:"bytes,2,opt,name=vm_name,json=vmName,proto3" json:"vm_name,omitempty"`
	DiskType VMDiskType             `protobuf:"varint,3,opt,name=disk_type,json=diskType,proto3,enum=pb.VMDiskType" json:"disk_type,omitempty"`
	// not required for disk_type=nvme
	SourcePath        string `protobuf:"bytes,4,opt,name=source_path,json=sourcePath,proto3" json:"source_path,omitempty"`
	SourcePciAddrBus  int32  `protobuf:"varint,5,opt,name=source_pci_addr_bus,json=sourcePciAddrBus,proto3" json:"source_pci_addr_bus,omitempty"`
	SourcePciAddrSlot int32  `protobuf:"varint,6,opt,name=source_pci_addr_slot,json=sourcePciAddrSlot,proto3" json:"source_pci_addr_slot,omitempty"`
	// example: hda, sda, vda
	// not required for disk_type=nvme
	TargetDev string `protobuf:"bytes,7,opt,name=target_dev,json=targetDev,proto3" json:"target_dev,omitempty"`
	// virtio, scsi, default: virtio
	// not required for disk_type=nvme
	TargetBus     string `protobuf:"bytes,8,opt,name=target_bus,json=targetBus,proto3" json:"target_bus,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddDiskRequest) Reset() {
	*x = AddDiskRequest{}
	mi := &file_vms_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddDiskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDiskRequest) ProtoMessage() {}

func (x *AddDiskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDiskRequest.ProtoReflect.Descriptor instead.
func (*AddDiskRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{34}
}

func (x *AddDiskRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddDiskRequest) GetVmName() string {
	if x != nil {
		return x.VmName
	}
	return ""
}

func (x *AddDiskRequest) GetDiskType() VMDiskType {
	if x != nil {
		return x.DiskType
	}
	return VMDiskType_INVALID_DISK_TYPE
}

func (x *AddDiskRequest) GetSourcePath() string {
	if x != nil {
		return x.SourcePath
	}
	return ""
}

func (x *AddDiskRequest) GetSourcePciAddrBus() int32 {
	if x != nil {
		return x.SourcePciAddrBus
	}
	return 0
}

func (x *AddDiskRequest) GetSourcePciAddrSlot() int32 {
	if x != nil {
		return x.SourcePciAddrSlot
	}
	return 0
}

func (x *AddDiskRequest) GetTargetDev() string {
	if x != nil {
		return x.TargetDev
	}
	return ""
}

func (x *AddDiskRequest) GetTargetBus() string {
	if x != nil {
		return x.TargetBus
	}
	return ""
}

type DeleteDiskRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	VmName           string                 `protobuf:"bytes,2,opt,name=vm_name,json=vmName,proto3" json:"vm_name,omitempty"`
	DiskType         VMDiskType             `protobuf:"varint,3,opt,name=disk_type,json=diskType,proto3,enum=pb.VMDiskType" json:"disk_type,omitempty"`
	SourcePciAddrBus int32                  `protobuf:"varint,4,opt,name=source_pci_addr_bus,json=sourcePciAddrBus,proto3" json:"source_pci_addr_bus,omitempty"`
	TargetDev        string                 `protobuf:"bytes,5,opt,name=target_dev,json=targetDev,proto3" json:"target_dev,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DeleteDiskRequest) Reset() {
	*x = DeleteDiskRequest{}
	mi := &file_vms_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDiskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDiskRequest) ProtoMessage() {}

func (x *DeleteDiskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDiskRequest.ProtoReflect.Descriptor instead.
func (*DeleteDiskRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{35}
}

func (x *DeleteDiskRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteDiskRequest) GetVmName() string {
	if x != nil {
		return x.VmName
	}
	return ""
}

func (x *DeleteDiskRequest) GetDiskType() VMDiskType {
	if x != nil {
		return x.DiskType
	}
	return VMDiskType_INVALID_DISK_TYPE
}

func (x *DeleteDiskRequest) GetSourcePciAddrBus() int32 {
	if x != nil {
		return x.SourcePciAddrBus
	}
	return 0
}

func (x *DeleteDiskRequest) GetTargetDev() string {
	if x != nil {
		return x.TargetDev
	}
	return ""
}

type ListVMDiskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	VmName        string                 `protobuf:"bytes,2,opt,name=vm_name,json=vmName,proto3" json:"vm_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVMDiskRequest) Reset() {
	*x = ListVMDiskRequest{}
	mi := &file_vms_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVMDiskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVMDiskRequest) ProtoMessage() {}

func (x *ListVMDiskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVMDiskRequest.ProtoReflect.Descriptor instead.
func (*ListVMDiskRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{36}
}

func (x *ListVMDiskRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ListVMDiskRequest) GetVmName() string {
	if x != nil {
		return x.VmName
	}
	return ""
}

type VMDisk struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	DiskType   VMDiskType             `protobuf:"varint,1,opt,name=disk_type,json=diskType,proto3,enum=pb.VMDiskType" json:"disk_type,omitempty"`
	SourcePath string                 `protobuf:"bytes,2,opt,name=source_path,json=sourcePath,proto3" json:"source_path,omitempty"`
	// example: hda, sda, vda
	// not required for disk_type=nvme
	TargetDev string `protobuf:"bytes,3,opt,name=target_dev,json=targetDev,proto3" json:"target_dev,omitempty"`
	// virtio, scsi, default: virtio
	// not required for disk_type=nvme
	TargetBus     string `protobuf:"bytes,4,opt,name=target_bus,json=targetBus,proto3" json:"target_bus,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VMDisk) Reset() {
	*x = VMDisk{}
	mi := &file_vms_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VMDisk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VMDisk) ProtoMessage() {}

func (x *VMDisk) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VMDisk.ProtoReflect.Descriptor instead.
func (*VMDisk) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{37}
}

func (x *VMDisk) GetDiskType() VMDiskType {
	if x != nil {
		return x.DiskType
	}
	return VMDiskType_INVALID_DISK_TYPE
}

func (x *VMDisk) GetSourcePath() string {
	if x != nil {
		return x.SourcePath
	}
	return ""
}

func (x *VMDisk) GetTargetDev() string {
	if x != nil {
		return x.TargetDev
	}
	return ""
}

func (x *VMDisk) GetTargetBus() string {
	if x != nil {
		return x.TargetBus
	}
	return ""
}

type VMHostdev struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	SourceAddrDomain int32                  `protobuf:"varint,1,opt,name=source_addr_domain,json=sourceAddrDomain,proto3" json:"source_addr_domain,omitempty"`
	SourceAddrBus    int32                  `protobuf:"varint,2,opt,name=source_addr_bus,json=sourceAddrBus,proto3" json:"source_addr_bus,omitempty"`
	SourceAddrSlot   int32                  `protobuf:"varint,3,opt,name=source_addr_slot,json=sourceAddrSlot,proto3" json:"source_addr_slot,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *VMHostdev) Reset() {
	*x = VMHostdev{}
	mi := &file_vms_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VMHostdev) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VMHostdev) ProtoMessage() {}

func (x *VMHostdev) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VMHostdev.ProtoReflect.Descriptor instead.
func (*VMHostdev) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{38}
}

func (x *VMHostdev) GetSourceAddrDomain() int32 {
	if x != nil {
		return x.SourceAddrDomain
	}
	return 0
}

func (x *VMHostdev) GetSourceAddrBus() int32 {
	if x != nil {
		return x.SourceAddrBus
	}
	return 0
}

func (x *VMHostdev) GetSourceAddrSlot() int32 {
	if x != nil {
		return x.SourceAddrSlot
	}
	return 0
}

type ListVMDiskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Disks         []*VMDisk              `protobuf:"bytes,1,rep,name=disks,proto3" json:"disks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVMDiskResponse) Reset() {
	*x = ListVMDiskResponse{}
	mi := &file_vms_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVMDiskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVMDiskResponse) ProtoMessage() {}

func (x *ListVMDiskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVMDiskResponse.ProtoReflect.Descriptor instead.
func (*ListVMDiskResponse) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{39}
}

func (x *ListVMDiskResponse) GetDisks() []*VMDisk {
	if x != nil {
		return x.Disks
	}
	return nil
}

type GetVMInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	VmName        string                 `protobuf:"bytes,2,opt,name=vm_name,json=vmName,proto3" json:"vm_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVMInfoRequest) Reset() {
	*x = GetVMInfoRequest{}
	mi := &file_vms_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVMInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVMInfoRequest) ProtoMessage() {}

func (x *GetVMInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVMInfoRequest.ProtoReflect.Descriptor instead.
func (*GetVMInfoRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{40}
}

func (x *GetVMInfoRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetVMInfoRequest) GetVmName() string {
	if x != nil {
		return x.VmName
	}
	return ""
}

type GetVMInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cpu           uint32                 `protobuf:"varint,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory        uint64                 `protobuf:"varint,2,opt,name=memory,proto3" json:"memory,omitempty"`
	Disks         []*VMDisk              `protobuf:"bytes,3,rep,name=disks,proto3" json:"disks,omitempty"`
	Interfaces    []*VMNetworkInterface  `protobuf:"bytes,4,rep,name=interfaces,proto3" json:"interfaces,omitempty"`
	Hostdevs      []*VMHostdev           `protobuf:"bytes,5,rep,name=hostdevs,proto3" json:"hostdevs,omitempty"`
	VncPort       int32                  `protobuf:"varint,6,opt,name=vnc_port,json=vncPort,proto3" json:"vnc_port,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVMInfoResponse) Reset() {
	*x = GetVMInfoResponse{}
	mi := &file_vms_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVMInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVMInfoResponse) ProtoMessage() {}

func (x *GetVMInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVMInfoResponse.ProtoReflect.Descriptor instead.
func (*GetVMInfoResponse) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{41}
}

func (x *GetVMInfoResponse) GetCpu() uint32 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *GetVMInfoResponse) GetMemory() uint64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *GetVMInfoResponse) GetDisks() []*VMDisk {
	if x != nil {
		return x.Disks
	}
	return nil
}

func (x *GetVMInfoResponse) GetInterfaces() []*VMNetworkInterface {
	if x != nil {
		return x.Interfaces
	}
	return nil
}

func (x *GetVMInfoResponse) GetHostdevs() []*VMHostdev {
	if x != nil {
		return x.Hostdevs
	}
	return nil
}

func (x *GetVMInfoResponse) GetVncPort() int32 {
	if x != nil {
		return x.VncPort
	}
	return 0
}

type VMVncPortRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	VmName        string                 `protobuf:"bytes,2,opt,name=vm_name,json=vmName,proto3" json:"vm_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VMVncPortRequest) Reset() {
	*x = VMVncPortRequest{}
	mi := &file_vms_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VMVncPortRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VMVncPortRequest) ProtoMessage() {}

func (x *VMVncPortRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VMVncPortRequest.ProtoReflect.Descriptor instead.
func (*VMVncPortRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{42}
}

func (x *VMVncPortRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *VMVncPortRequest) GetVmName() string {
	if x != nil {
		return x.VmName
	}
	return ""
}

type VMVncPortResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Port          int32                  `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VMVncPortResponse) Reset() {
	*x = VMVncPortResponse{}
	mi := &file_vms_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VMVncPortResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VMVncPortResponse) ProtoMessage() {}

func (x *VMVncPortResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VMVncPortResponse.ProtoReflect.Descriptor instead.
func (*VMVncPortResponse) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{43}
}

func (x *VMVncPortResponse) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type AddHostdevRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	VmName           string                 `protobuf:"bytes,2,opt,name=vm_name,json=vmName,proto3" json:"vm_name,omitempty"`
	SourceAddrDomain int32                  `protobuf:"varint,3,opt,name=source_addr_domain,json=sourceAddrDomain,proto3" json:"source_addr_domain,omitempty"`
	SourceAddrBus    int32                  `protobuf:"varint,4,opt,name=source_addr_bus,json=sourceAddrBus,proto3" json:"source_addr_bus,omitempty"`
	SourceAddrSlot   int32                  `protobuf:"varint,5,opt,name=source_addr_slot,json=sourceAddrSlot,proto3" json:"source_addr_slot,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *AddHostdevRequest) Reset() {
	*x = AddHostdevRequest{}
	mi := &file_vms_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddHostdevRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddHostdevRequest) ProtoMessage() {}

func (x *AddHostdevRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddHostdevRequest.ProtoReflect.Descriptor instead.
func (*AddHostdevRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{44}
}

func (x *AddHostdevRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddHostdevRequest) GetVmName() string {
	if x != nil {
		return x.VmName
	}
	return ""
}

func (x *AddHostdevRequest) GetSourceAddrDomain() int32 {
	if x != nil {
		return x.SourceAddrDomain
	}
	return 0
}

func (x *AddHostdevRequest) GetSourceAddrBus() int32 {
	if x != nil {
		return x.SourceAddrBus
	}
	return 0
}

func (x *AddHostdevRequest) GetSourceAddrSlot() int32 {
	if x != nil {
		return x.SourceAddrSlot
	}
	return 0
}

type DeleteHostdevRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	VmName           string                 `protobuf:"bytes,2,opt,name=vm_name,json=vmName,proto3" json:"vm_name,omitempty"`
	SourceAddrDomain int32                  `protobuf:"varint,3,opt,name=source_addr_domain,json=sourceAddrDomain,proto3" json:"source_addr_domain,omitempty"`
	SourceAddrBus    int32                  `protobuf:"varint,4,opt,name=source_addr_bus,json=sourceAddrBus,proto3" json:"source_addr_bus,omitempty"`
	SourceAddrSlot   int32                  `protobuf:"varint,5,opt,name=source_addr_slot,json=sourceAddrSlot,proto3" json:"source_addr_slot,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DeleteHostdevRequest) Reset() {
	*x = DeleteHostdevRequest{}
	mi := &file_vms_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteHostdevRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHostdevRequest) ProtoMessage() {}

func (x *DeleteHostdevRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHostdevRequest.ProtoReflect.Descriptor instead.
func (*DeleteHostdevRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{45}
}

func (x *DeleteHostdevRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteHostdevRequest) GetVmName() string {
	if x != nil {
		return x.VmName
	}
	return ""
}

func (x *DeleteHostdevRequest) GetSourceAddrDomain() int32 {
	if x != nil {
		return x.SourceAddrDomain
	}
	return 0
}

func (x *DeleteHostdevRequest) GetSourceAddrBus() int32 {
	if x != nil {
		return x.SourceAddrBus
	}
	return 0
}

func (x *DeleteHostdevRequest) GetSourceAddrSlot() int32 {
	if x != nil {
		return x.SourceAddrSlot
	}
	return 0
}

type ReinstallVMRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	VmName        string                 `protobuf:"bytes,2,opt,name=vm_name,json=vmName,proto3" json:"vm_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReinstallVMRequest) Reset() {
	*x = ReinstallVMRequest{}
	mi := &file_vms_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReinstallVMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReinstallVMRequest) ProtoMessage() {}

func (x *ReinstallVMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReinstallVMRequest.ProtoReflect.Descriptor instead.
func (*ReinstallVMRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{46}
}

func (x *ReinstallVMRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ReinstallVMRequest) GetVmName() string {
	if x != nil {
		return x.VmName
	}
	return ""
}

var File_vms_proto protoreflect.FileDescriptor

const file_vms_proto_rawDesc = "" +
	"\n" +
	"\tvms.proto\x12\x02pb\"I\n" +
	"\x13VMOperationResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xa7\x01\n" +
	"\x1aCreateVMWithLibvirtRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\avm_name\x18\x02 \x01(\tR\x06vmName\x12\x10\n" +
	"\x03cpu\x18\x03 \x01(\x05R\x03cpu\x12\x16\n" +
	"\x06memory\x18\x04 \x01(\x05R\x06memory\x12\x1b\n" +
	"\tdisk_path\x18\x05 \x01(\tR\bdiskPath\x12\x19\n" +
	"\biso_path\x18\x06 \x01(\tR\aisoPath\"\xa4\x01\n" +
	"\x1cCreateVMWithMultipassRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\avm_name\x18\x02 \x01(\tR\x06vmName\x12\x10\n" +
	"\x03cpu\x18\x03 \x01(\x05R\x03cpu\x12\x16\n" +
	"\x06memory\x18\x04 \x01(\tR\x06memory\x12\x1b\n" +
	"\tdisk_size\x18\x05 \x01(\tR\bdiskSize\x12\x14\n" +
	"\x05image\x18\x06 \x01(\tR\x05image\"\x97\x01\n" +
	"\x0fCreateVMRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\avm_name\x18\x02 \x01(\tR\x06vmName\x12\x10\n" +
	"\x03cpu\x18\x03 \x01(\x05R\x03cpu\x12\x16\n" +
	"\x06memory\x18\x04 \x01(\x05R\x06memory\x12\x1b\n" +
	"\tdisk_size\x18\x05 \x01(\x05R\bdiskSize\x12\x14\n" +
	"\x05image\x18\x06 \x01(\tR\x05image\"9\n" +
	"\x0eStartVMRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\avm_name\x18\x02 \x01(\tR\x06vmName\"8\n" +
	"\rStopVMRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\avm_name\x18\x02 \x01(\tR\x06vmName\":\n" +
	"\x0fDeleteVMRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\avm_name\x18\x02 \x01(\tR\x06vmName\":\n" +
	"\x0fUpdateVMRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\avm_name\x18\x02 \x01(\tR\x06vmName\"'\n" +
	"\x15ListVMInstanceReqeust\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"X\n" +
	"\x06VMInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05state\x18\x02 \x01(\tR\x05state\x12\x0e\n" +
	"\x02ip\x18\x03 \x01(\tR\x02ip\x12\x14\n" +
	"\x05image\x18\x04 \x01(\tR\x05image\"?\n" +
	"\x16ListVMInstanceResponse\x12%\n" +
	"\bvm_infos\x18\x01 \x03(\v2\n" +
	".pb.VMInfoR\avmInfos\"\"\n" +
	"\x10ListImageRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"+\n" +
	"\x11ListImageResponse\x12\x16\n" +
	"\x06images\x18\x01 \x03(\tR\x06images\"8\n" +
	"\x12DeleteImageRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\"I\n" +
	"\x13DeleteImageResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"e\n" +
	"\x14multipassExecRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12#\n" +
	"\rinstance_name\x18\x02 \x01(\tR\finstanceName\x12\x18\n" +
	"\acommand\x18\x03 \x01(\tR\acommand\"/\n" +
	"\x15multipassExecResponse\x12\x16\n" +
	"\x06output\x18\x01 \x01(\tR\x06output\"\x89\x01\n" +
	"\x1bCreateVolWithLibvirtReqeust\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04pool\x18\x03 \x01(\tR\x04pool\x12\x1a\n" +
	"\bcapacity\x18\x04 \x01(\x05R\bcapacity\x12\x16\n" +
	"\x06format\x18\x05 \x01(\tR\x06format\"X\n" +
	"\x1cCreateVolWithLibvirtResponse\x12\x12\n" +
	"\x04pool\x18\x01 \x01(\tR\x04pool\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x10\n" +
	"\x03key\x18\x03 \x01(\tR\x03key\"W\n" +
	"\rGetVolRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\tpool_name\x18\x02 \x01(\tR\bpoolName\x12\x19\n" +
	"\bvol_name\x18\x03 \x01(\tR\avolName\"h\n" +
	"\x0eGetVolResponse\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04pool\x18\x03 \x01(\tR\x04pool\x12\x1a\n" +
	"\bcapacity\x18\x04 \x01(\x05R\bcapacity\x12\x12\n" +
	"\x04path\x18\x05 \x01(\tR\x04path\"9\n" +
	"\x0fListNodeRequest\x12\x14\n" +
	"\x05start\x18\x01 \x01(\x05R\x05start\x12\x10\n" +
	"\x03end\x18\x02 \x01(\x05R\x03end\"\xd1\x01\n" +
	"\x04Node\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x0e\n" +
	"\x02os\x18\x02 \x01(\tR\x02os\x12\x17\n" +
	"\avm_type\x18\x03 \x01(\tR\x06vmType\x12\x1b\n" +
	"\ttotal_cpu\x18\x04 \x01(\x05R\btotalCpu\x12!\n" +
	"\ftotal_memory\x18\x05 \x01(\x05R\vtotalMemory\x12(\n" +
	"\x10system_disk_size\x18\x06 \x01(\x05R\x0esystemDiskSize\x12\x0e\n" +
	"\x02ip\x18\a \x01(\tR\x02ip\x12\x16\n" +
	"\x06online\x18\b \x01(\bR\x06online\"H\n" +
	"\x10ListNodeResponse\x12\x1e\n" +
	"\x05nodes\x18\x01 \x03(\v2\b.pb.NodeR\x05nodes\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\" \n" +
	"\x0eGetNodeRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"/\n" +
	"\x0fGetNodeResponse\x12\x1c\n" +
	"\x04node\x18\x01 \x01(\v2\b.pb.NodeR\x04node\"T\n" +
	"\x14HostNetworkInterface\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x10\n" +
	"\x03mac\x18\x02 \x01(\tR\x03mac\x12\x16\n" +
	"\x06active\x18\x03 \x01(\bR\x06active\"1\n" +
	"\x1fListHostNetworkInterfaceRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\\\n" +
	" ListHostNetworkInterfaceResponse\x128\n" +
	"\n" +
	"interfaces\x18\x01 \x03(\v2\x18.pb.HostNetworkInterfaceR\n" +
	"interfaces\"\xce\x01\n" +
	"\x1aAddNetworkInterfaceRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\avm_name\x18\x02 \x01(\tR\x06vmName\x12%\n" +
	"\x04type\x18\x03 \x01(\x0e2\x11.pb.InterfaceTypeR\x04type\x12*\n" +
	"\x11source_direct_dev\x18\x04 \x01(\tR\x0fsourceDirectDev\x124\n" +
	"\x05model\x18\x05 \x01(\x0e2\x1e.pb.InterfaceSourceDirectModelR\x05model\"Z\n" +
	"\x1dDeleteNetworkInterfaceRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\avm_name\x18\x02 \x01(\tR\x06vmName\x12\x10\n" +
	"\x03mac\x18\x03 \x01(\tR\x03mac\"H\n" +
	"\x1dListVMNetwrokInterfaceReqeust\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\avm_name\x18\x02 \x01(\tR\x06vmName\"\x9f\x01\n" +
	"\x12VMNetworkInterface\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x16\n" +
	"\x06source\x18\x03 \x01(\tR\x06source\x12!\n" +
	"\fsource_model\x18\x04 \x01(\tR\vsourceModel\x12\x14\n" +
	"\x05model\x18\x05 \x01(\tR\x05model\x12\x10\n" +
	"\x03mac\x18\x06 \x01(\tR\x03mac\"X\n" +
	"\x1eListVMNetworkInterfaceResponse\x126\n" +
	"\n" +
	"interfaces\x18\x01 \x03(\v2\x16.pb.VMNetworkInterfaceR\n" +
	"interfaces\"\xa5\x02\n" +
	"\x0eAddDiskRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\avm_name\x18\x02 \x01(\tR\x06vmName\x12+\n" +
	"\tdisk_type\x18\x03 \x01(\x0e2\x0e.pb.VMDiskTypeR\bdiskType\x12\x1f\n" +
	"\vsource_path\x18\x04 \x01(\tR\n" +
	"sourcePath\x12-\n" +
	"\x13source_pci_addr_bus\x18\x05 \x01(\x05R\x10sourcePciAddrBus\x12/\n" +
	"\x14source_pci_addr_slot\x18\x06 \x01(\x05R\x11sourcePciAddrSlot\x12\x1d\n" +
	"\n" +
	"target_dev\x18\a \x01(\tR\ttargetDev\x12\x1d\n" +
	"\n" +
	"target_bus\x18\b \x01(\tR\ttargetBus\"\xb7\x01\n" +
	"\x11DeleteDiskRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\avm_name\x18\x02 \x01(\tR\x06vmName\x12+\n" +
	"\tdisk_type\x18\x03 \x01(\x0e2\x0e.pb.VMDiskTypeR\bdiskType\x12-\n" +
	"\x13source_pci_addr_bus\x18\x04 \x01(\x05R\x10sourcePciAddrBus\x12\x1d\n" +
	"\n" +
	"target_dev\x18\x05 \x01(\tR\ttargetDev\"<\n" +
	"\x11ListVMDiskRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\avm_name\x18\x02 \x01(\tR\x06vmName\"\x94\x01\n" +
	"\x06VMDisk\x12+\n" +
	"\tdisk_type\x18\x01 \x01(\x0e2\x0e.pb.VMDiskTypeR\bdiskType\x12\x1f\n" +
	"\vsource_path\x18\x02 \x01(\tR\n" +
	"sourcePath\x12\x1d\n" +
	"\n" +
	"target_dev\x18\x03 \x01(\tR\ttargetDev\x12\x1d\n" +
	"\n" +
	"target_bus\x18\x04 \x01(\tR\ttargetBus\"\x8b\x01\n" +
	"\tVMHostdev\x12,\n" +
	"\x12source_addr_domain\x18\x01 \x01(\x05R\x10sourceAddrDomain\x12&\n" +
	"\x0fsource_addr_bus\x18\x02 \x01(\x05R\rsourceAddrBus\x12(\n" +
	"\x10source_addr_slot\x18\x03 \x01(\x05R\x0esourceAddrSlot\"6\n" +
	"\x12ListVMDiskResponse\x12 \n" +
	"\x05disks\x18\x01 \x03(\v2\n" +
	".pb.VMDiskR\x05disks\";\n" +
	"\x10GetVMInfoRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\avm_name\x18\x02 \x01(\tR\x06vmName\"\xdd\x01\n" +
	"\x11GetVMInfoResponse\x12\x10\n" +
	"\x03cpu\x18\x01 \x01(\rR\x03cpu\x12\x16\n" +
	"\x06memory\x18\x02 \x01(\x04R\x06memory\x12 \n" +
	"\x05disks\x18\x03 \x03(\v2\n" +
	".pb.VMDiskR\x05disks\x126\n" +
	"\n" +
	"interfaces\x18\x04 \x03(\v2\x16.pb.VMNetworkInterfaceR\n" +
	"interfaces\x12)\n" +
	"\bhostdevs\x18\x05 \x03(\v2\r.pb.VMHostdevR\bhostdevs\x12\x19\n" +
	"\bvnc_port\x18\x06 \x01(\x05R\avncPort\";\n" +
	"\x10VMVncPortRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\avm_name\x18\x02 \x01(\tR\x06vmName\"'\n" +
	"\x11VMVncPortResponse\x12\x12\n" +
	"\x04port\x18\x01 \x01(\x05R\x04port\"\xbc\x01\n" +
	"\x11AddHostdevRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\avm_name\x18\x02 \x01(\tR\x06vmName\x12,\n" +
	"\x12source_addr_domain\x18\x03 \x01(\x05R\x10sourceAddrDomain\x12&\n" +
	"\x0fsource_addr_bus\x18\x04 \x01(\x05R\rsourceAddrBus\x12(\n" +
	"\x10source_addr_slot\x18\x05 \x01(\x05R\x0esourceAddrSlot\"\xbf\x01\n" +
	"\x14DeleteHostdevRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\avm_name\x18\x02 \x01(\tR\x06vmName\x12,\n" +
	"\x12source_addr_domain\x18\x03 \x01(\x05R\x10sourceAddrDomain\x12&\n" +
	"\x0fsource_addr_bus\x18\x04 \x01(\x05R\rsourceAddrBus\x12(\n" +
	"\x10source_addr_slot\x18\x05 \x01(\x05R\x0esourceAddrSlot\"=\n" +
	"\x12ReinstallVMRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\avm_name\x18\x02 \x01(\tR\x06vmName*b\n" +
	"\rInterfaceType\x12\x1a\n" +
	"\x16INVALID_INTERFACE_TYPE\x10\x00\x12\x1a\n" +
	"\x16INTERFACE_TYPE_NETWORK\x10\x01\x12\x19\n" +
	"\x15INTERFACE_TYPE_DIRECT\x10\x02*\xa0\x01\n" +
	"\x1aInterfaceSourceDirectModel\x12)\n" +
	"%INVALID_INTERFACE_SOURCE_DIRECT_MODEL\x10\x00\x12(\n" +
	"$INTERFACE_SOURCE_DIRECT_MODEL_BRIDGE\x10\x01\x12-\n" +
	")INTERFACE_SOURCE_DIRECT_MODEL_PASSTHROUGH\x10\x02*B\n" +
	"\n" +
	"VMDiskType\x12\x15\n" +
	"\x11INVALID_DISK_TYPE\x10\x00\x12\b\n" +
	"\x04FILE\x10\x01\x12\t\n" +
	"\x05BLOCK\x10\x02\x12\b\n" +
	"\x04NVME\x10\x032\xf0\f\n" +
	"\x03Vms\x12N\n" +
	"\x13CreateVMWithLibvirt\x12\x1e.pb.CreateVMWithLibvirtRequest\x1a\x17.pb.VMOperationResponse\x12Y\n" +
	"\x14CreateVolWithLibvirt\x12\x1f.pb.CreateVolWithLibvirtReqeust\x1a .pb.CreateVolWithLibvirtResponse\x12/\n" +
	"\x06GetVol\x12\x11.pb.GetVolRequest\x1a\x12.pb.GetVolResponse\x12Y\n" +
	"\x1eAddNetworkInterfaceWithLibvirt\x12\x1e.pb.AddNetworkInterfaceRequest\x1a\x17.pb.VMOperationResponse\x12_\n" +
	"!DeleteNetworkInterfaceWithLibvirt\x12!.pb.DeleteNetworkInterfaceRequest\x1a\x17.pb.VMOperationResponse\x12A\n" +
	"\x12AddDiskWithLibvirt\x12\x12.pb.AddDiskRequest\x1a\x17.pb.VMOperationResponse\x12G\n" +
	"\x15DeleteDiskWithLibvirt\x12\x15.pb.DeleteDiskRequest\x1a\x17.pb.VMOperationResponse\x12G\n" +
	"\x15AddHostdevWithLibvirt\x12\x15.pb.AddHostdevRequest\x1a\x17.pb.VMOperationResponse\x12M\n" +
	"\x18DeleteHostdevWithLibvirt\x12\x18.pb.DeleteHostdevRequest\x1a\x17.pb.VMOperationResponse\x12D\n" +
	"\x15GetVncPortWithLibvirt\x12\x14.pb.VMVncPortRequest\x1a\x15.pb.VMVncPortResponse\x12I\n" +
	"\x16ReinstallVMWithLibvirt\x12\x16.pb.ReinstallVMRequest\x1a\x17.pb.VMOperationResponse\x128\n" +
	"\bCreateVM\x12\x13.pb.CreateVMRequest\x1a\x17.pb.VMOperationResponse\x126\n" +
	"\aStartVM\x12\x12.pb.StartVMRequest\x1a\x17.pb.VMOperationResponse\x124\n" +
	"\x06StopVM\x12\x11.pb.StopVMRequest\x1a\x17.pb.VMOperationResponse\x128\n" +
	"\bDeleteVM\x12\x13.pb.DeleteVMRequest\x1a\x17.pb.VMOperationResponse\x12G\n" +
	"\x0eListVMInstance\x12\x19.pb.ListVMInstanceReqeust\x1a\x1a.pb.ListVMInstanceResponse\x128\n" +
	"\tListImage\x12\x14.pb.ListImageRequest\x1a\x15.pb.ListImageResponse\x12>\n" +
	"\vDeleteImage\x12\x16.pb.DeleteImageRequest\x1a\x17.pb.DeleteImageResponse\x128\n" +
	"\bUpdateVM\x12\x13.pb.UpdateVMRequest\x1a\x17.pb.VMOperationResponse\x128\n" +
	"\tGetVMInfo\x12\x14.pb.GetVMInfoRequest\x1a\x15.pb.GetVMInfoResponse\x12R\n" +
	"\x15CreateVMWithMultipass\x12 .pb.CreateVMWithMultipassRequest\x1a\x17.pb.VMOperationResponse\x12D\n" +
	"\rMultipassExec\x12\x18.pb.multipassExecRequest\x1a\x19.pb.multipassExecResponse\x125\n" +
	"\bListNode\x12\x13.pb.ListNodeRequest\x1a\x14.pb.ListNodeResponse\x122\n" +
	"\aGetNode\x12\x12.pb.GetNodeRequest\x1a\x13.pb.GetNodeResponseB\x06Z\x04./pbb\x06proto3"

var (
	file_vms_proto_rawDescOnce sync.Once
	file_vms_proto_rawDescData []byte
)

func file_vms_proto_rawDescGZIP() []byte {
	file_vms_proto_rawDescOnce.Do(func() {
		file_vms_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_vms_proto_rawDesc), len(file_vms_proto_rawDesc)))
	})
	return file_vms_proto_rawDescData
}

var file_vms_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_vms_proto_msgTypes = make([]protoimpl.MessageInfo, 47)
var file_vms_proto_goTypes = []any{
	(InterfaceType)(0),                       // 0: pb.InterfaceType
	(InterfaceSourceDirectModel)(0),          // 1: pb.InterfaceSourceDirectModel
	(VMDiskType)(0),                          // 2: pb.VMDiskType
	(*VMOperationResponse)(nil),              // 3: pb.VMOperationResponse
	(*CreateVMWithLibvirtRequest)(nil),       // 4: pb.CreateVMWithLibvirtRequest
	(*CreateVMWithMultipassRequest)(nil),     // 5: pb.CreateVMWithMultipassRequest
	(*CreateVMRequest)(nil),                  // 6: pb.CreateVMRequest
	(*StartVMRequest)(nil),                   // 7: pb.StartVMRequest
	(*StopVMRequest)(nil),                    // 8: pb.StopVMRequest
	(*DeleteVMRequest)(nil),                  // 9: pb.DeleteVMRequest
	(*UpdateVMRequest)(nil),                  // 10: pb.UpdateVMRequest
	(*ListVMInstanceReqeust)(nil),            // 11: pb.ListVMInstanceReqeust
	(*VMInfo)(nil),                           // 12: pb.VMInfo
	(*ListVMInstanceResponse)(nil),           // 13: pb.ListVMInstanceResponse
	(*ListImageRequest)(nil),                 // 14: pb.ListImageRequest
	(*ListImageResponse)(nil),                // 15: pb.ListImageResponse
	(*DeleteImageRequest)(nil),               // 16: pb.DeleteImageRequest
	(*DeleteImageResponse)(nil),              // 17: pb.DeleteImageResponse
	(*MultipassExecRequest)(nil),             // 18: pb.multipassExecRequest
	(*MultipassExecResponse)(nil),            // 19: pb.multipassExecResponse
	(*CreateVolWithLibvirtReqeust)(nil),      // 20: pb.CreateVolWithLibvirtReqeust
	(*CreateVolWithLibvirtResponse)(nil),     // 21: pb.CreateVolWithLibvirtResponse
	(*GetVolRequest)(nil),                    // 22: pb.GetVolRequest
	(*GetVolResponse)(nil),                   // 23: pb.GetVolResponse
	(*ListNodeRequest)(nil),                  // 24: pb.ListNodeRequest
	(*Node)(nil),                             // 25: pb.Node
	(*ListNodeResponse)(nil),                 // 26: pb.ListNodeResponse
	(*GetNodeRequest)(nil),                   // 27: pb.GetNodeRequest
	(*GetNodeResponse)(nil),                  // 28: pb.GetNodeResponse
	(*HostNetworkInterface)(nil),             // 29: pb.HostNetworkInterface
	(*ListHostNetworkInterfaceRequest)(nil),  // 30: pb.ListHostNetworkInterfaceRequest
	(*ListHostNetworkInterfaceResponse)(nil), // 31: pb.ListHostNetworkInterfaceResponse
	(*AddNetworkInterfaceRequest)(nil),       // 32: pb.AddNetworkInterfaceRequest
	(*DeleteNetworkInterfaceRequest)(nil),    // 33: pb.DeleteNetworkInterfaceRequest
	(*ListVMNetwrokInterfaceReqeust)(nil),    // 34: pb.ListVMNetwrokInterfaceReqeust
	(*VMNetworkInterface)(nil),               // 35: pb.VMNetworkInterface
	(*ListVMNetworkInterfaceResponse)(nil),   // 36: pb.ListVMNetworkInterfaceResponse
	(*AddDiskRequest)(nil),                   // 37: pb.AddDiskRequest
	(*DeleteDiskRequest)(nil),                // 38: pb.DeleteDiskRequest
	(*ListVMDiskRequest)(nil),                // 39: pb.ListVMDiskRequest
	(*VMDisk)(nil),                           // 40: pb.VMDisk
	(*VMHostdev)(nil),                        // 41: pb.VMHostdev
	(*ListVMDiskResponse)(nil),               // 42: pb.ListVMDiskResponse
	(*GetVMInfoRequest)(nil),                 // 43: pb.GetVMInfoRequest
	(*GetVMInfoResponse)(nil),                // 44: pb.GetVMInfoResponse
	(*VMVncPortRequest)(nil),                 // 45: pb.VMVncPortRequest
	(*VMVncPortResponse)(nil),                // 46: pb.VMVncPortResponse
	(*AddHostdevRequest)(nil),                // 47: pb.AddHostdevRequest
	(*DeleteHostdevRequest)(nil),             // 48: pb.DeleteHostdevRequest
	(*ReinstallVMRequest)(nil),               // 49: pb.ReinstallVMRequest
}
var file_vms_proto_depIdxs = []int32{
	12, // 0: pb.ListVMInstanceResponse.vm_infos:type_name -> pb.VMInfo
	25, // 1: pb.ListNodeResponse.nodes:type_name -> pb.Node
	25, // 2: pb.GetNodeResponse.node:type_name -> pb.Node
	29, // 3: pb.ListHostNetworkInterfaceResponse.interfaces:type_name -> pb.HostNetworkInterface
	0,  // 4: pb.AddNetworkInterfaceRequest.type:type_name -> pb.InterfaceType
	1,  // 5: pb.AddNetworkInterfaceRequest.model:type_name -> pb.InterfaceSourceDirectModel
	35, // 6: pb.ListVMNetworkInterfaceResponse.interfaces:type_name -> pb.VMNetworkInterface
	2,  // 7: pb.AddDiskRequest.disk_type:type_name -> pb.VMDiskType
	2,  // 8: pb.DeleteDiskRequest.disk_type:type_name -> pb.VMDiskType
	2,  // 9: pb.VMDisk.disk_type:type_name -> pb.VMDiskType
	40, // 10: pb.ListVMDiskResponse.disks:type_name -> pb.VMDisk
	40, // 11: pb.GetVMInfoResponse.disks:type_name -> pb.VMDisk
	35, // 12: pb.GetVMInfoResponse.interfaces:type_name -> pb.VMNetworkInterface
	41, // 13: pb.GetVMInfoResponse.hostdevs:type_name -> pb.VMHostdev
	4,  // 14: pb.Vms.CreateVMWithLibvirt:input_type -> pb.CreateVMWithLibvirtRequest
	20, // 15: pb.Vms.CreateVolWithLibvirt:input_type -> pb.CreateVolWithLibvirtReqeust
	22, // 16: pb.Vms.GetVol:input_type -> pb.GetVolRequest
	32, // 17: pb.Vms.AddNetworkInterfaceWithLibvirt:input_type -> pb.AddNetworkInterfaceRequest
	33, // 18: pb.Vms.DeleteNetworkInterfaceWithLibvirt:input_type -> pb.DeleteNetworkInterfaceRequest
	37, // 19: pb.Vms.AddDiskWithLibvirt:input_type -> pb.AddDiskRequest
	38, // 20: pb.Vms.DeleteDiskWithLibvirt:input_type -> pb.DeleteDiskRequest
	47, // 21: pb.Vms.AddHostdevWithLibvirt:input_type -> pb.AddHostdevRequest
	48, // 22: pb.Vms.DeleteHostdevWithLibvirt:input_type -> pb.DeleteHostdevRequest
	45, // 23: pb.Vms.GetVncPortWithLibvirt:input_type -> pb.VMVncPortRequest
	49, // 24: pb.Vms.ReinstallVMWithLibvirt:input_type -> pb.ReinstallVMRequest
	6,  // 25: pb.Vms.CreateVM:input_type -> pb.CreateVMRequest
	7,  // 26: pb.Vms.StartVM:input_type -> pb.StartVMRequest
	8,  // 27: pb.Vms.StopVM:input_type -> pb.StopVMRequest
	9,  // 28: pb.Vms.DeleteVM:input_type -> pb.DeleteVMRequest
	11, // 29: pb.Vms.ListVMInstance:input_type -> pb.ListVMInstanceReqeust
	14, // 30: pb.Vms.ListImage:input_type -> pb.ListImageRequest
	16, // 31: pb.Vms.DeleteImage:input_type -> pb.DeleteImageRequest
	10, // 32: pb.Vms.UpdateVM:input_type -> pb.UpdateVMRequest
	43, // 33: pb.Vms.GetVMInfo:input_type -> pb.GetVMInfoRequest
	5,  // 34: pb.Vms.CreateVMWithMultipass:input_type -> pb.CreateVMWithMultipassRequest
	18, // 35: pb.Vms.MultipassExec:input_type -> pb.multipassExecRequest
	24, // 36: pb.Vms.ListNode:input_type -> pb.ListNodeRequest
	27, // 37: pb.Vms.GetNode:input_type -> pb.GetNodeRequest
	3,  // 38: pb.Vms.CreateVMWithLibvirt:output_type -> pb.VMOperationResponse
	21, // 39: pb.Vms.CreateVolWithLibvirt:output_type -> pb.CreateVolWithLibvirtResponse
	23, // 40: pb.Vms.GetVol:output_type -> pb.GetVolResponse
	3,  // 41: pb.Vms.AddNetworkInterfaceWithLibvirt:output_type -> pb.VMOperationResponse
	3,  // 42: pb.Vms.DeleteNetworkInterfaceWithLibvirt:output_type -> pb.VMOperationResponse
	3,  // 43: pb.Vms.AddDiskWithLibvirt:output_type -> pb.VMOperationResponse
	3,  // 44: pb.Vms.DeleteDiskWithLibvirt:output_type -> pb.VMOperationResponse
	3,  // 45: pb.Vms.AddHostdevWithLibvirt:output_type -> pb.VMOperationResponse
	3,  // 46: pb.Vms.DeleteHostdevWithLibvirt:output_type -> pb.VMOperationResponse
	46, // 47: pb.Vms.GetVncPortWithLibvirt:output_type -> pb.VMVncPortResponse
	3,  // 48: pb.Vms.ReinstallVMWithLibvirt:output_type -> pb.VMOperationResponse
	3,  // 49: pb.Vms.CreateVM:output_type -> pb.VMOperationResponse
	3,  // 50: pb.Vms.StartVM:output_type -> pb.VMOperationResponse
	3,  // 51: pb.Vms.StopVM:output_type -> pb.VMOperationResponse
	3,  // 52: pb.Vms.DeleteVM:output_type -> pb.VMOperationResponse
	13, // 53: pb.Vms.ListVMInstance:output_type -> pb.ListVMInstanceResponse
	15, // 54: pb.Vms.ListImage:output_type -> pb.ListImageResponse
	17, // 55: pb.Vms.DeleteImage:output_type -> pb.DeleteImageResponse
	3,  // 56: pb.Vms.UpdateVM:output_type -> pb.VMOperationResponse
	44, // 57: pb.Vms.GetVMInfo:output_type -> pb.GetVMInfoResponse
	3,  // 58: pb.Vms.CreateVMWithMultipass:output_type -> pb.VMOperationResponse
	19, // 59: pb.Vms.MultipassExec:output_type -> pb.multipassExecResponse
	26, // 60: pb.Vms.ListNode:output_type -> pb.ListNodeResponse
	28, // 61: pb.Vms.GetNode:output_type -> pb.GetNodeResponse
	38, // [38:62] is the sub-list for method output_type
	14, // [14:38] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_vms_proto_init() }
func file_vms_proto_init() {
	if File_vms_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_vms_proto_rawDesc), len(file_vms_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   47,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_vms_proto_goTypes,
		DependencyIndexes: file_vms_proto_depIdxs,
		EnumInfos:         file_vms_proto_enumTypes,
		MessageInfos:      file_vms_proto_msgTypes,
	}.Build()
	File_vms_proto = out.File
	file_vms_proto_goTypes = nil
	file_vms_proto_depIdxs = nil
}

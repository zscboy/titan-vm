// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.7
// source: message.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 定义消息类型枚举
type MessageType int32

const (
	MessageType_UNKNOWN              MessageType = 0
	MessageType_COMMAND              MessageType = 1
	MessageType_PROXY_SESSION_CREATE MessageType = 2
	MessageType_PROXY_SESSION_DATA   MessageType = 3
	MessageType_PROXY_SESSION_CLOSE  MessageType = 4
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0: "UNKNOWN",
		1: "COMMAND",
		2: "PROXY_SESSION_CREATE",
		3: "PROXY_SESSION_DATA",
		4: "PROXY_SESSION_CLOSE",
	}
	MessageType_value = map[string]int32{
		"UNKNOWN":              0,
		"COMMAND":              1,
		"PROXY_SESSION_CREATE": 2,
		"PROXY_SESSION_DATA":   3,
		"PROXY_SESSION_CLOSE":  4,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_message_proto_enumTypes[0].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_message_proto_enumTypes[0]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0}
}

type CommandType int32

const (
	CommandType_INVALID_COMMAND      CommandType = 0
	CommandType_DOWNLOAD_IMAGE       CommandType = 1
	CommandType_DOWNLOAD_TASK_DELETE CommandType = 2
	CommandType_DOWNLOAD_TASK_LIST   CommandType = 3
	CommandType_DOWNLOAD_TASK_GET    CommandType = 4
	CommandType_SSH_AUTH             CommandType = 5
	CommandType_HOST_INFO            CommandType = 6
	CommandType_LIST_NVME            CommandType = 7
)

// Enum value maps for CommandType.
var (
	CommandType_name = map[int32]string{
		0: "INVALID_COMMAND",
		1: "DOWNLOAD_IMAGE",
		2: "DOWNLOAD_TASK_DELETE",
		3: "DOWNLOAD_TASK_LIST",
		4: "DOWNLOAD_TASK_GET",
		5: "SSH_AUTH",
		6: "HOST_INFO",
		7: "LIST_NVME",
	}
	CommandType_value = map[string]int32{
		"INVALID_COMMAND":      0,
		"DOWNLOAD_IMAGE":       1,
		"DOWNLOAD_TASK_DELETE": 2,
		"DOWNLOAD_TASK_LIST":   3,
		"DOWNLOAD_TASK_GET":    4,
		"SSH_AUTH":             5,
		"HOST_INFO":            6,
		"LIST_NVME":            7,
	}
)

func (x CommandType) Enum() *CommandType {
	p := new(CommandType)
	*p = x
	return p
}

func (x CommandType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommandType) Descriptor() protoreflect.EnumDescriptor {
	return file_message_proto_enumTypes[1].Descriptor()
}

func (CommandType) Type() protoreflect.EnumType {
	return &file_message_proto_enumTypes[1]
}

func (x CommandType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommandType.Descriptor instead.
func (CommandType) EnumDescriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1}
}

type NetworkInterfaceFlags int32

const (
	NetworkInterfaceFlags_INVALID        NetworkInterfaceFlags = 0
	NetworkInterfaceFlags_UP             NetworkInterfaceFlags = 1
	NetworkInterfaceFlags_BROADCAST      NetworkInterfaceFlags = 2
	NetworkInterfaceFlags_LOOPBACK       NetworkInterfaceFlags = 3
	NetworkInterfaceFlags_POINT_TO_POINT NetworkInterfaceFlags = 4
	NetworkInterfaceFlags_MULTICAST      NetworkInterfaceFlags = 5
	NetworkInterfaceFlags_RUNNING        NetworkInterfaceFlags = 6
)

// Enum value maps for NetworkInterfaceFlags.
var (
	NetworkInterfaceFlags_name = map[int32]string{
		0: "INVALID",
		1: "UP",
		2: "BROADCAST",
		3: "LOOPBACK",
		4: "POINT_TO_POINT",
		5: "MULTICAST",
		6: "RUNNING",
	}
	NetworkInterfaceFlags_value = map[string]int32{
		"INVALID":        0,
		"UP":             1,
		"BROADCAST":      2,
		"LOOPBACK":       3,
		"POINT_TO_POINT": 4,
		"MULTICAST":      5,
		"RUNNING":        6,
	}
)

func (x NetworkInterfaceFlags) Enum() *NetworkInterfaceFlags {
	p := new(NetworkInterfaceFlags)
	*p = x
	return p
}

func (x NetworkInterfaceFlags) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NetworkInterfaceFlags) Descriptor() protoreflect.EnumDescriptor {
	return file_message_proto_enumTypes[2].Descriptor()
}

func (NetworkInterfaceFlags) Type() protoreflect.EnumType {
	return &file_message_proto_enumTypes[2]
}

func (x NetworkInterfaceFlags) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NetworkInterfaceFlags.Descriptor instead.
func (NetworkInterfaceFlags) EnumDescriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{2}
}

// 定义命令消息体
type Command struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          CommandType            `protobuf:"varint,1,opt,name=type,proto3,enum=pb.CommandType" json:"type,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Command) Reset() {
	*x = Command{}
	mi := &file_message_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0}
}

func (x *Command) GetType() CommandType {
	if x != nil {
		return x.Type
	}
	return CommandType_INVALID_COMMAND
}

func (x *Command) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// 目标地址
type DestAddr struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Network       string                 `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Addr          string                 `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DestAddr) Reset() {
	*x = DestAddr{}
	mi := &file_message_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DestAddr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestAddr) ProtoMessage() {}

func (x *DestAddr) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestAddr.ProtoReflect.Descriptor instead.
func (*DestAddr) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1}
}

func (x *DestAddr) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *DestAddr) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

// 定义通用消息体
type Message struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          MessageType            `protobuf:"varint,1,opt,name=type,proto3,enum=pb.MessageType" json:"type,omitempty"`
	SessionId     string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Payload       []byte                 `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_message_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{2}
}

func (x *Message) GetType() MessageType {
	if x != nil {
		return x.Type
	}
	return MessageType_UNKNOWN
}

func (x *Message) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *Message) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type CmdDownloadImageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Md5           string                 `protobuf:"bytes,2,opt,name=md5,proto3" json:"md5,omitempty"`
	Path          string                 `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CmdDownloadImageRequest) Reset() {
	*x = CmdDownloadImageRequest{}
	mi := &file_message_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CmdDownloadImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmdDownloadImageRequest) ProtoMessage() {}

func (x *CmdDownloadImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmdDownloadImageRequest.ProtoReflect.Descriptor instead.
func (*CmdDownloadImageRequest) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{3}
}

func (x *CmdDownloadImageRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *CmdDownloadImageRequest) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *CmdDownloadImageRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type CmdDownloadImageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrMsg        string                 `protobuf:"bytes,2,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
	TaskId        string                 `protobuf:"bytes,3,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CmdDownloadImageResponse) Reset() {
	*x = CmdDownloadImageResponse{}
	mi := &file_message_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CmdDownloadImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmdDownloadImageResponse) ProtoMessage() {}

func (x *CmdDownloadImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmdDownloadImageResponse.ProtoReflect.Descriptor instead.
func (*CmdDownloadImageResponse) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{4}
}

func (x *CmdDownloadImageResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CmdDownloadImageResponse) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *CmdDownloadImageResponse) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type DownloadTask struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Url           string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Md5           string                 `protobuf:"bytes,3,opt,name=md5,proto3" json:"md5,omitempty"`
	Path          string                 `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	TotalSize     int64                  `protobuf:"varint,5,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	DownloadSize  int64                  `protobuf:"varint,6,opt,name=download_size,json=downloadSize,proto3" json:"download_size,omitempty"`
	Running       bool                   `protobuf:"varint,7,opt,name=running,proto3" json:"running,omitempty"`
	Success       bool                   `protobuf:"varint,8,opt,name=success,proto3" json:"success,omitempty"`
	ErrMsg        string                 `protobuf:"bytes,9,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadTask) Reset() {
	*x = DownloadTask{}
	mi := &file_message_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadTask) ProtoMessage() {}

func (x *DownloadTask) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadTask.ProtoReflect.Descriptor instead.
func (*DownloadTask) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{5}
}

func (x *DownloadTask) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DownloadTask) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *DownloadTask) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *DownloadTask) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *DownloadTask) GetTotalSize() int64 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *DownloadTask) GetDownloadSize() int64 {
	if x != nil {
		return x.DownloadSize
	}
	return 0
}

func (x *DownloadTask) GetRunning() bool {
	if x != nil {
		return x.Running
	}
	return false
}

func (x *DownloadTask) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DownloadTask) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

type CmdDownloadTaskListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tasks         []*DownloadTask        `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CmdDownloadTaskListResponse) Reset() {
	*x = CmdDownloadTaskListResponse{}
	mi := &file_message_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CmdDownloadTaskListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmdDownloadTaskListResponse) ProtoMessage() {}

func (x *CmdDownloadTaskListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmdDownloadTaskListResponse.ProtoReflect.Descriptor instead.
func (*CmdDownloadTaskListResponse) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6}
}

func (x *CmdDownloadTaskListResponse) GetTasks() []*DownloadTask {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type CmdDownloadTaskDeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CmdDownloadTaskDeleteRequest) Reset() {
	*x = CmdDownloadTaskDeleteRequest{}
	mi := &file_message_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CmdDownloadTaskDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmdDownloadTaskDeleteRequest) ProtoMessage() {}

func (x *CmdDownloadTaskDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmdDownloadTaskDeleteRequest.ProtoReflect.Descriptor instead.
func (*CmdDownloadTaskDeleteRequest) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{7}
}

func (x *CmdDownloadTaskDeleteRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type CmdDownloadTaskDeleteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CmdDownloadTaskDeleteResponse) Reset() {
	*x = CmdDownloadTaskDeleteResponse{}
	mi := &file_message_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CmdDownloadTaskDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmdDownloadTaskDeleteResponse) ProtoMessage() {}

func (x *CmdDownloadTaskDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmdDownloadTaskDeleteResponse.ProtoReflect.Descriptor instead.
func (*CmdDownloadTaskDeleteResponse) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8}
}

func (x *CmdDownloadTaskDeleteResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CmdDownloadTaskDeleteResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CmdDownloadTaskGetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CmdDownloadTaskGetRequest) Reset() {
	*x = CmdDownloadTaskGetRequest{}
	mi := &file_message_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CmdDownloadTaskGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmdDownloadTaskGetRequest) ProtoMessage() {}

func (x *CmdDownloadTaskGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmdDownloadTaskGetRequest.ProtoReflect.Descriptor instead.
func (*CmdDownloadTaskGetRequest) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{9}
}

func (x *CmdDownloadTaskGetRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type CmdDownloadTaskGetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrMsg        string                 `protobuf:"bytes,2,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
	Task          *DownloadTask          `protobuf:"bytes,3,opt,name=task,proto3" json:"task,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CmdDownloadTaskGetResponse) Reset() {
	*x = CmdDownloadTaskGetResponse{}
	mi := &file_message_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CmdDownloadTaskGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmdDownloadTaskGetResponse) ProtoMessage() {}

func (x *CmdDownloadTaskGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmdDownloadTaskGetResponse.ProtoReflect.Descriptor instead.
func (*CmdDownloadTaskGetResponse) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{10}
}

func (x *CmdDownloadTaskGetResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CmdDownloadTaskGetResponse) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *CmdDownloadTaskGetResponse) GetTask() *DownloadTask {
	if x != nil {
		return x.Task
	}
	return nil
}

type CmdSSHAuthRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SshPubKey     []byte                 `protobuf:"bytes,1,opt,name=ssh_pub_key,json=sshPubKey,proto3" json:"ssh_pub_key,omitempty"`
	MultipassCert []byte                 `protobuf:"bytes,2,opt,name=multipass_cert,json=multipassCert,proto3" json:"multipass_cert,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CmdSSHAuthRequest) Reset() {
	*x = CmdSSHAuthRequest{}
	mi := &file_message_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CmdSSHAuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmdSSHAuthRequest) ProtoMessage() {}

func (x *CmdSSHAuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmdSSHAuthRequest.ProtoReflect.Descriptor instead.
func (*CmdSSHAuthRequest) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{11}
}

func (x *CmdSSHAuthRequest) GetSshPubKey() []byte {
	if x != nil {
		return x.SshPubKey
	}
	return nil
}

func (x *CmdSSHAuthRequest) GetMultipassCert() []byte {
	if x != nil {
		return x.MultipassCert
	}
	return nil
}

type CmdSSHAuthResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SshPort       int32                  `protobuf:"varint,1,opt,name=ssh_port,json=sshPort,proto3" json:"ssh_port,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	ErrMsg        string                 `protobuf:"bytes,3,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CmdSSHAuthResponse) Reset() {
	*x = CmdSSHAuthResponse{}
	mi := &file_message_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CmdSSHAuthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmdSSHAuthResponse) ProtoMessage() {}

func (x *CmdSSHAuthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmdSSHAuthResponse.ProtoReflect.Descriptor instead.
func (*CmdSSHAuthResponse) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{12}
}

func (x *CmdSSHAuthResponse) GetSshPort() int32 {
	if x != nil {
		return x.SshPort
	}
	return 0
}

func (x *CmdSSHAuthResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CmdSSHAuthResponse) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

type CPU struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Num           int32                  `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"`
	Usage         float32                `protobuf:"fixed32,2,opt,name=usage,proto3" json:"usage,omitempty"`
	Arch          string                 `protobuf:"bytes,3,opt,name=arch,proto3" json:"arch,omitempty"`
	Vendor        string                 `protobuf:"bytes,4,opt,name=vendor,proto3" json:"vendor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CPU) Reset() {
	*x = CPU{}
	mi := &file_message_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPU) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPU) ProtoMessage() {}

func (x *CPU) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPU.ProtoReflect.Descriptor instead.
func (*CPU) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{13}
}

func (x *CPU) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *CPU) GetUsage() float32 {
	if x != nil {
		return x.Usage
	}
	return 0
}

func (x *CPU) GetArch() string {
	if x != nil {
		return x.Arch
	}
	return ""
}

func (x *CPU) GetVendor() string {
	if x != nil {
		return x.Vendor
	}
	return ""
}

type Memory struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int64                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Used          int64                  `protobuf:"varint,2,opt,name=used,proto3" json:"used,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Memory) Reset() {
	*x = Memory{}
	mi := &file_message_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Memory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Memory) ProtoMessage() {}

func (x *Memory) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Memory.ProtoReflect.Descriptor instead.
func (*Memory) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{14}
}

func (x *Memory) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *Memory) GetUsed() int64 {
	if x != nil {
		return x.Used
	}
	return 0
}

type Disk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Total         uint64                 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	Used          uint64                 `protobuf:"varint,4,opt,name=used,proto3" json:"used,omitempty"`
	MountPoint    string                 `protobuf:"bytes,5,opt,name=mountPoint,proto3" json:"mountPoint,omitempty"`
	FsType        string                 `protobuf:"bytes,6,opt,name=fs_type,json=fsType,proto3" json:"fs_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Disk) Reset() {
	*x = Disk{}
	mi := &file_message_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Disk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Disk) ProtoMessage() {}

func (x *Disk) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Disk.ProtoReflect.Descriptor instead.
func (*Disk) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{15}
}

func (x *Disk) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Disk) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Disk) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *Disk) GetUsed() uint64 {
	if x != nil {
		return x.Used
	}
	return 0
}

func (x *Disk) GetMountPoint() string {
	if x != nil {
		return x.MountPoint
	}
	return ""
}

func (x *Disk) GetFsType() string {
	if x != nil {
		return x.FsType
	}
	return ""
}

type NetwrokInterface struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Mac           string                 `protobuf:"bytes,2,opt,name=mac,proto3" json:"mac,omitempty"`
	Flags         uint32                 `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetwrokInterface) Reset() {
	*x = NetwrokInterface{}
	mi := &file_message_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetwrokInterface) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetwrokInterface) ProtoMessage() {}

func (x *NetwrokInterface) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetwrokInterface.ProtoReflect.Descriptor instead.
func (*NetwrokInterface) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{16}
}

func (x *NetwrokInterface) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NetwrokInterface) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *NetwrokInterface) GetFlags() uint32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type CmdHostInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cpu           *CPU                   `protobuf:"bytes,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory        *Memory                `protobuf:"bytes,2,opt,name=memory,proto3" json:"memory,omitempty"`
	Disks         []*Disk                `protobuf:"bytes,3,rep,name=disks,proto3" json:"disks,omitempty"`
	Interfaces    []*NetwrokInterface    `protobuf:"bytes,4,rep,name=interfaces,proto3" json:"interfaces,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CmdHostInfoResponse) Reset() {
	*x = CmdHostInfoResponse{}
	mi := &file_message_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CmdHostInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmdHostInfoResponse) ProtoMessage() {}

func (x *CmdHostInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmdHostInfoResponse.ProtoReflect.Descriptor instead.
func (*CmdHostInfoResponse) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{17}
}

func (x *CmdHostInfoResponse) GetCpu() *CPU {
	if x != nil {
		return x.Cpu
	}
	return nil
}

func (x *CmdHostInfoResponse) GetMemory() *Memory {
	if x != nil {
		return x.Memory
	}
	return nil
}

func (x *CmdHostInfoResponse) GetDisks() []*Disk {
	if x != nil {
		return x.Disks
	}
	return nil
}

func (x *CmdHostInfoResponse) GetInterfaces() []*NetwrokInterface {
	if x != nil {
		return x.Interfaces
	}
	return nil
}

type NvmeInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	PciAddr       string                 `protobuf:"bytes,2,opt,name=pci_addr,json=pciAddr,proto3" json:"pci_addr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NvmeInfo) Reset() {
	*x = NvmeInfo{}
	mi := &file_message_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NvmeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NvmeInfo) ProtoMessage() {}

func (x *NvmeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NvmeInfo.ProtoReflect.Descriptor instead.
func (*NvmeInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{18}
}

func (x *NvmeInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NvmeInfo) GetPciAddr() string {
	if x != nil {
		return x.PciAddr
	}
	return ""
}

type CmdListNvmeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nvmes         []*NvmeInfo            `protobuf:"bytes,1,rep,name=nvmes,proto3" json:"nvmes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CmdListNvmeResponse) Reset() {
	*x = CmdListNvmeResponse{}
	mi := &file_message_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CmdListNvmeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmdListNvmeResponse) ProtoMessage() {}

func (x *CmdListNvmeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmdListNvmeResponse.ProtoReflect.Descriptor instead.
func (*CmdListNvmeResponse) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{19}
}

func (x *CmdListNvmeResponse) GetNvmes() []*NvmeInfo {
	if x != nil {
		return x.Nvmes
	}
	return nil
}

var File_message_proto protoreflect.FileDescriptor

const file_message_proto_rawDesc = "" +
	"\n" +
	"\rmessage.proto\x12\x02pb\"B\n" +
	"\aCommand\x12#\n" +
	"\x04type\x18\x01 \x01(\x0e2\x0f.pb.CommandTypeR\x04type\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\"8\n" +
	"\bDestAddr\x12\x18\n" +
	"\anetwork\x18\x01 \x01(\tR\anetwork\x12\x12\n" +
	"\x04addr\x18\x02 \x01(\tR\x04addr\"g\n" +
	"\aMessage\x12#\n" +
	"\x04type\x18\x01 \x01(\x0e2\x0f.pb.MessageTypeR\x04type\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\x12\x18\n" +
	"\apayload\x18\x03 \x01(\fR\apayload\"Q\n" +
	"\x17CmdDownloadImageRequest\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\x12\x10\n" +
	"\x03md5\x18\x02 \x01(\tR\x03md5\x12\x12\n" +
	"\x04path\x18\x03 \x01(\tR\x04path\"f\n" +
	"\x18CmdDownloadImageResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x17\n" +
	"\aerr_msg\x18\x02 \x01(\tR\x06errMsg\x12\x17\n" +
	"\atask_id\x18\x03 \x01(\tR\x06taskId\"\xe7\x01\n" +
	"\fDownloadTask\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\x12\x10\n" +
	"\x03md5\x18\x03 \x01(\tR\x03md5\x12\x12\n" +
	"\x04path\x18\x04 \x01(\tR\x04path\x12\x1d\n" +
	"\n" +
	"total_size\x18\x05 \x01(\x03R\ttotalSize\x12#\n" +
	"\rdownload_size\x18\x06 \x01(\x03R\fdownloadSize\x12\x18\n" +
	"\arunning\x18\a \x01(\bR\arunning\x12\x18\n" +
	"\asuccess\x18\b \x01(\bR\asuccess\x12\x17\n" +
	"\aerr_msg\x18\t \x01(\tR\x06errMsg\"E\n" +
	"\x1bCmdDownloadTaskListResponse\x12&\n" +
	"\x05tasks\x18\x01 \x03(\v2\x10.pb.DownloadTaskR\x05tasks\"7\n" +
	"\x1cCmdDownloadTaskDeleteRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\"S\n" +
	"\x1dCmdDownloadTaskDeleteResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"4\n" +
	"\x19CmdDownloadTaskGetRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\"u\n" +
	"\x1aCmdDownloadTaskGetResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x17\n" +
	"\aerr_msg\x18\x02 \x01(\tR\x06errMsg\x12$\n" +
	"\x04task\x18\x03 \x01(\v2\x10.pb.DownloadTaskR\x04task\"Z\n" +
	"\x11CmdSSHAuthRequest\x12\x1e\n" +
	"\vssh_pub_key\x18\x01 \x01(\fR\tsshPubKey\x12%\n" +
	"\x0emultipass_cert\x18\x02 \x01(\fR\rmultipassCert\"b\n" +
	"\x12CmdSSHAuthResponse\x12\x19\n" +
	"\bssh_port\x18\x01 \x01(\x05R\asshPort\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x17\n" +
	"\aerr_msg\x18\x03 \x01(\tR\x06errMsg\"Y\n" +
	"\x03CPU\x12\x10\n" +
	"\x03num\x18\x01 \x01(\x05R\x03num\x12\x14\n" +
	"\x05usage\x18\x02 \x01(\x02R\x05usage\x12\x12\n" +
	"\x04arch\x18\x03 \x01(\tR\x04arch\x12\x16\n" +
	"\x06vendor\x18\x04 \x01(\tR\x06vendor\"2\n" +
	"\x06Memory\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x03R\x05total\x12\x12\n" +
	"\x04used\x18\x02 \x01(\x03R\x04used\"\x91\x01\n" +
	"\x04Disk\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x14\n" +
	"\x05total\x18\x03 \x01(\x04R\x05total\x12\x12\n" +
	"\x04used\x18\x04 \x01(\x04R\x04used\x12\x1e\n" +
	"\n" +
	"mountPoint\x18\x05 \x01(\tR\n" +
	"mountPoint\x12\x17\n" +
	"\afs_type\x18\x06 \x01(\tR\x06fsType\"N\n" +
	"\x10NetwrokInterface\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x10\n" +
	"\x03mac\x18\x02 \x01(\tR\x03mac\x12\x14\n" +
	"\x05flags\x18\x03 \x01(\rR\x05flags\"\xaa\x01\n" +
	"\x13CmdHostInfoResponse\x12\x19\n" +
	"\x03cpu\x18\x01 \x01(\v2\a.pb.CPUR\x03cpu\x12\"\n" +
	"\x06memory\x18\x02 \x01(\v2\n" +
	".pb.MemoryR\x06memory\x12\x1e\n" +
	"\x05disks\x18\x03 \x03(\v2\b.pb.DiskR\x05disks\x124\n" +
	"\n" +
	"interfaces\x18\x04 \x03(\v2\x14.pb.NetwrokInterfaceR\n" +
	"interfaces\"9\n" +
	"\bNvmeInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x19\n" +
	"\bpci_addr\x18\x02 \x01(\tR\apciAddr\"9\n" +
	"\x13CmdListNvmeResponse\x12\"\n" +
	"\x05nvmes\x18\x01 \x03(\v2\f.pb.NvmeInfoR\x05nvmes*r\n" +
	"\vMessageType\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\v\n" +
	"\aCOMMAND\x10\x01\x12\x18\n" +
	"\x14PROXY_SESSION_CREATE\x10\x02\x12\x16\n" +
	"\x12PROXY_SESSION_DATA\x10\x03\x12\x17\n" +
	"\x13PROXY_SESSION_CLOSE\x10\x04*\xab\x01\n" +
	"\vCommandType\x12\x13\n" +
	"\x0fINVALID_COMMAND\x10\x00\x12\x12\n" +
	"\x0eDOWNLOAD_IMAGE\x10\x01\x12\x18\n" +
	"\x14DOWNLOAD_TASK_DELETE\x10\x02\x12\x16\n" +
	"\x12DOWNLOAD_TASK_LIST\x10\x03\x12\x15\n" +
	"\x11DOWNLOAD_TASK_GET\x10\x04\x12\f\n" +
	"\bSSH_AUTH\x10\x05\x12\r\n" +
	"\tHOST_INFO\x10\x06\x12\r\n" +
	"\tLIST_NVME\x10\a*y\n" +
	"\x15NetworkInterfaceFlags\x12\v\n" +
	"\aINVALID\x10\x00\x12\x06\n" +
	"\x02UP\x10\x01\x12\r\n" +
	"\tBROADCAST\x10\x02\x12\f\n" +
	"\bLOOPBACK\x10\x03\x12\x12\n" +
	"\x0ePOINT_TO_POINT\x10\x04\x12\r\n" +
	"\tMULTICAST\x10\x05\x12\v\n" +
	"\aRUNNING\x10\x062\t\n" +
	"\amessageB\aZ\x05../pbb\x06proto3"

var (
	file_message_proto_rawDescOnce sync.Once
	file_message_proto_rawDescData []byte
)

func file_message_proto_rawDescGZIP() []byte {
	file_message_proto_rawDescOnce.Do(func() {
		file_message_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_message_proto_rawDesc), len(file_message_proto_rawDesc)))
	})
	return file_message_proto_rawDescData
}

var file_message_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_message_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_message_proto_goTypes = []any{
	(MessageType)(0),                      // 0: pb.MessageType
	(CommandType)(0),                      // 1: pb.CommandType
	(NetworkInterfaceFlags)(0),            // 2: pb.NetworkInterfaceFlags
	(*Command)(nil),                       // 3: pb.Command
	(*DestAddr)(nil),                      // 4: pb.DestAddr
	(*Message)(nil),                       // 5: pb.Message
	(*CmdDownloadImageRequest)(nil),       // 6: pb.CmdDownloadImageRequest
	(*CmdDownloadImageResponse)(nil),      // 7: pb.CmdDownloadImageResponse
	(*DownloadTask)(nil),                  // 8: pb.DownloadTask
	(*CmdDownloadTaskListResponse)(nil),   // 9: pb.CmdDownloadTaskListResponse
	(*CmdDownloadTaskDeleteRequest)(nil),  // 10: pb.CmdDownloadTaskDeleteRequest
	(*CmdDownloadTaskDeleteResponse)(nil), // 11: pb.CmdDownloadTaskDeleteResponse
	(*CmdDownloadTaskGetRequest)(nil),     // 12: pb.CmdDownloadTaskGetRequest
	(*CmdDownloadTaskGetResponse)(nil),    // 13: pb.CmdDownloadTaskGetResponse
	(*CmdSSHAuthRequest)(nil),             // 14: pb.CmdSSHAuthRequest
	(*CmdSSHAuthResponse)(nil),            // 15: pb.CmdSSHAuthResponse
	(*CPU)(nil),                           // 16: pb.CPU
	(*Memory)(nil),                        // 17: pb.Memory
	(*Disk)(nil),                          // 18: pb.Disk
	(*NetwrokInterface)(nil),              // 19: pb.NetwrokInterface
	(*CmdHostInfoResponse)(nil),           // 20: pb.CmdHostInfoResponse
	(*NvmeInfo)(nil),                      // 21: pb.NvmeInfo
	(*CmdListNvmeResponse)(nil),           // 22: pb.CmdListNvmeResponse
}
var file_message_proto_depIdxs = []int32{
	1,  // 0: pb.Command.type:type_name -> pb.CommandType
	0,  // 1: pb.Message.type:type_name -> pb.MessageType
	8,  // 2: pb.CmdDownloadTaskListResponse.tasks:type_name -> pb.DownloadTask
	8,  // 3: pb.CmdDownloadTaskGetResponse.task:type_name -> pb.DownloadTask
	16, // 4: pb.CmdHostInfoResponse.cpu:type_name -> pb.CPU
	17, // 5: pb.CmdHostInfoResponse.memory:type_name -> pb.Memory
	18, // 6: pb.CmdHostInfoResponse.disks:type_name -> pb.Disk
	19, // 7: pb.CmdHostInfoResponse.interfaces:type_name -> pb.NetwrokInterface
	21, // 8: pb.CmdListNvmeResponse.nvmes:type_name -> pb.NvmeInfo
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_message_proto_init() }
func file_message_proto_init() {
	if File_message_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_message_proto_rawDesc), len(file_message_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_message_proto_goTypes,
		DependencyIndexes: file_message_proto_depIdxs,
		EnumInfos:         file_message_proto_enumTypes,
		MessageInfos:      file_message_proto_msgTypes,
	}.Build()
	File_message_proto = out.File
	file_message_proto_goTypes = nil
	file_message_proto_depIdxs = nil
}
